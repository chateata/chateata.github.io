import{_ as ae,ab as re,ac as ce,T as de,S as pe,M as me,k as ue,c as D,o as x,b as t,e as k,w as z,g as C,f as P,E as b,D as N,n as I,V as G,F as ge,q as fe,a0 as X,t as A,ad as _,ae as he,z as J,y as M,A as ve,O as ye,a2 as Fe,a9 as we,u as be}from"./index-BaLn3tjY.js";class Ce{constructor(){this.cifData=null,this.proteinAtoms=[],this.ligandAtoms=[],this.coordinateSystem={origin:{x:0,y:0,z:0},scale:{x:1,y:1,z:1},rotation:{x:0,y:0,z:0}}}parseCIF(e){this.cifData=e;const d=e.split(`
`);console.log("=== 开始解析CIF文件坐标 ==="),this.proteinAtoms=[];for(let o=0;o<d.length;o++){const l=d[o].trim();if(l.startsWith("ATOM")){const p=l.split(/\s+/);if(p.length>=12){const y={id:parseInt(p[1]),name:p[2],resName:p[4],chainId:p[8],resSeq:parseInt(p[5]),x:parseFloat(p[9]),y:parseFloat(p[10]),z:parseFloat(p[11]),element:p[2].charAt(0)};this.proteinAtoms.push(y)}}}this.ligandAtoms=[];for(let o=0;o<d.length;o++){const l=d[o].trim();if(l.startsWith("HETATM")&&l.includes("LIG1")){const p=l.split(/\s+/);if(p.length>=12){const y={id:parseInt(p[1]),name:p[2],resName:p[4],chainId:p[8],resSeq:parseInt(p[5]),x:parseFloat(p[9]),y:parseFloat(p[10]),z:parseFloat(p[11]),element:p[2].charAt(0)};this.ligandAtoms.push(y)}}}return console.log("CIF解析完成:"),console.log(`- 蛋白质原子数: ${this.proteinAtoms.length}`),console.log(`- 配体原子数: ${this.ligandAtoms.length}`),this.calculateCoordinateSystem(),{proteinAtoms:this.proteinAtoms,ligandAtoms:this.ligandAtoms,coordinateSystem:this.coordinateSystem}}calculateCoordinateSystem(){if(this.proteinAtoms.length===0&&this.ligandAtoms.length===0){console.warn("没有找到原子坐标，使用默认坐标系");return}const e=[...this.proteinAtoms,...this.ligandAtoms];let d=1/0,o=1/0,l=1/0,p=-1/0,y=-1/0,g=-1/0;e.forEach(f=>{d=Math.min(d,f.x),o=Math.min(o,f.y),l=Math.min(l,f.z),p=Math.max(p,f.x),y=Math.max(y,f.y),g=Math.max(g,f.z)}),this.coordinateSystem.origin={x:(d+p)/2,y:(o+y)/2,z:(l+g)/2};const v=p-d,s=y-o,c=g-l,u=Math.max(v,s,c);this.coordinateSystem.scale={x:v/u,y:s/u,z:c/u},console.log("坐标系计算完成:"),console.log("- 原点:",this.coordinateSystem.origin),console.log("- 缩放:",this.coordinateSystem.scale),console.log("- 边界框:",{minX:d,minY:o,minZ:l,maxX:p,maxY:y,maxZ:g})}validatePDBCoordinates(e){console.log("=== 验证PDB坐标一致性 ===");const d=e.split(`
`),o=[];for(let v=0;v<d.length;v++){const s=d[v].trim();if(s.startsWith("ATOM")){const c={id:parseInt(s.substring(6,11)),name:s.substring(12,16).trim(),resName:s.substring(17,20).trim(),chainId:s.substring(21,22),resSeq:parseInt(s.substring(22,26)),x:parseFloat(s.substring(30,38)),y:parseFloat(s.substring(38,46)),z:parseFloat(s.substring(46,54)),element:s.substring(76,78).trim()};o.push(c)}}const l=[],p=Math.min(10,this.proteinAtoms.length,o.length);for(let v=0;v<p;v++){const s=this.proteinAtoms[v],c=o[v],u=Math.abs(s.x-c.x),f=Math.abs(s.y-c.y),h=Math.abs(s.z-c.z),i=Math.sqrt(u*u+f*f+h*h);l.push({atomId:s.id,atomName:s.name,cifCoords:{x:s.x,y:s.y,z:s.z},pdbCoords:{x:c.x,y:c.y,z:c.z},difference:i,isMatch:i<.1})}const y=l.filter(v=>v.isMatch).length,g=y/l.length*100;return console.log("PDB坐标验证结果:"),console.log(`- 比较原子数: ${l.length}`),console.log(`- 匹配原子数: ${y}`),console.log(`- 匹配率: ${g.toFixed(2)}%`),{isValid:g>95,matchRate:g,comparisons:l}}validateSDFCoordinates(e){console.log("=== 验证SDF坐标一致性 ===");const d=e.split(`
`),o=[];let l=0,p=0;for(let c=0;c<d.length;c++){const u=d[c].trim();if(u&&!u.startsWith("RDKit")&&!u.startsWith("M  END")){const f=u.split(/\s+/);if(f.length>=2){const h=parseInt(f[0]),i=parseInt(f[1]);if(!isNaN(h)&&!isNaN(i)){l=h,p=c+1;break}}}}for(let c=p;c<p+l;c++)if(c<d.length){const f=d[c].trim().split(/\s+/);if(f.length>=4){const h={id:c-p+1,x:parseFloat(f[0]),y:parseFloat(f[1]),z:parseFloat(f[2]),element:f[3]};o.push(h)}}const y=[],g=Math.min(10,this.ligandAtoms.length,o.length);for(let c=0;c<g;c++){const u=this.ligandAtoms[c],f=o[c],h=Math.abs(u.x-f.x),i=Math.abs(u.y-f.y),B=Math.abs(u.z-f.z),O=Math.sqrt(h*h+i*i+B*B);y.push({atomId:u.id,atomName:u.name,cifCoords:{x:u.x,y:u.y,z:u.z},sdfCoords:{x:f.x,y:f.y,z:f.z},difference:O,isMatch:O<.1})}const v=y.filter(c=>c.isMatch).length,s=v/y.length*100;return console.log("SDF坐标验证结果:"),console.log(`- 比较原子数: ${y.length}`),console.log(`- 匹配原子数: ${v}`),console.log(`- 匹配率: ${s.toFixed(2)}%`),{isValid:s>95,matchRate:s,comparisons:y}}generateMappingReport(e,d){const o={timestamp:new Date().toISOString(),coordinateSystem:this.coordinateSystem,proteinAtoms:this.proteinAtoms.length,ligandAtoms:this.ligandAtoms.length,pdbValidation:e,sdfValidation:d,overallStatus:"unknown"};return e.isValid&&d.isValid?(o.overallStatus="success",o.message="所有文件坐标完全匹配，可以安全进行分子对接"):e.isValid||d.isValid?(o.overallStatus="partial",o.message="部分文件坐标匹配，建议检查坐标系统"):(o.overallStatus="error",o.message="坐标不匹配，需要重新检查文件"),console.log("=== 坐标映射报告 ==="),console.log("状态:",o.overallStatus),console.log("消息:",o.message),console.log("蛋白质原子数:",o.proteinAtoms),console.log("配体原子数:",o.ligandAtoms),console.log("PDB匹配率:",o.pdbValidation.matchRate.toFixed(2)+"%"),console.log("SDF匹配率:",o.sdfValidation.matchRate.toFixed(2)+"%"),o}getAlignmentSuggestions(){const e={protein:{center:this.calculateCenter(this.proteinAtoms),boundingBox:this.calculateBoundingBox(this.proteinAtoms)},ligand:{center:this.calculateCenter(this.ligandAtoms),boundingBox:this.calculateBoundingBox(this.ligandAtoms)},recommendations:[]},d=this.calculateDistance(e.protein.center,e.ligand.center);return d<5?e.recommendations.push("蛋白质和配体距离较近，可能形成复合物"):d<10?e.recommendations.push("蛋白质和配体距离适中，需要进一步分析"):e.recommendations.push("蛋白质和配体距离较远，可能需要调整位置"),e}calculateCenter(e){if(e.length===0)return{x:0,y:0,z:0};const d=e.reduce((o,l)=>(o.x+=l.x,o.y+=l.y,o.z+=l.z,o),{x:0,y:0,z:0});return{x:d.x/e.length,y:d.y/e.length,z:d.z/e.length}}calculateBoundingBox(e){if(e.length===0)return{min:{x:0,y:0,z:0},max:{x:0,y:0,z:0}};const d={x:1/0,y:1/0,z:1/0},o={x:-1/0,y:-1/0,z:-1/0};return e.forEach(l=>{d.x=Math.min(d.x,l.x),d.y=Math.min(d.y,l.y),d.z=Math.min(d.z,l.z),o.x=Math.max(o.x,l.x),o.y=Math.max(o.y,l.y),o.z=Math.max(o.z,l.z)}),{min:d,max:o}}calculateDistance(e,d){const o=e.x-d.x,l=e.y-d.y,p=e.z-d.z;return Math.sqrt(o*o+l*l+p*p)}}const Se={components:{ArrowLeft:ue,Connection:me,Grid:pe,List:de,Setting:ce,Close:re},name:"PDBViewerPage",setup(){const H=be(),e=ve(),d=J(()=>"返回筛选结果"),o=()=>{H.push("/filter-results")},l=M({showCartoon:!1,showSticks:!1,showSpheres:!1,showSurface:!1,showMixed:!0}),p=M("element"),y=M("white"),g=M("docking"),v=M({filename:"7fui_A_HIY_8shr_A_601_protein.pdb",atomCount:0,chainCount:0,residueCount:0});let s=null,c=null,u=null,f=null,h=null;const i=M({affinity_pred_value:0,affinity_probability_binary:0}),B=M({confidence_score:0,ptm:0,iptm:0}),O=J(()=>{const n=e.getters.pdbViewerBioscore;return console.log("PDBViewerPage - 获取到的bioscore:",n),n!=null?n.toFixed(3):"N/A"}),L=M(!1),Q=M("affinity"),$=()=>new Promise((n,a)=>{if(window.$3Dmol){n(window.$3Dmol);return}const r=["https://3dmol.org/build/3dmol-min.js","https://cdn.jsdelivr.net/npm/3dmol@2.0.2/build/3dmol-min.js","https://unpkg.com/3dmol@2.0.2/build/3dmol-min.js"];let m=0;const F=()=>{if(m>=r.length){a(new Error("所有CDN源都无法访问"));return}const w=document.createElement("script");w.src=r[m],w.onload=()=>{setTimeout(()=>{window.$3Dmol?(console.log(`成功从 ${r[m]} 加载3Dmol.js`),n(window.$3Dmol)):(m++,F())},1e3)},w.onerror=()=>{console.log(`从 ${r[m]} 加载失败，尝试下一个源`),m++,F()},document.head.appendChild(w)};F()}),q=async()=>{try{console.log("开始加载PDB文件...");const n=e.getters.pdbViewerFiles;if(console.log("loadPDBFile - pdbViewerFiles:",n),console.log("loadPDBFile - store.state.pdbViewerFiles:",e.state.pdbViewerFiles),console.log("loadPDBFile - store.getters.pdbViewerFiles:",e.getters.pdbViewerFiles),!n||!n.proteinFile){console.warn("未找到PDB文件信息，使用默认文件");const a=await fetch("/src/assets/7fui_A_HIY_8shr_A_601_protein.pdb");if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);c=await a.text()}else{const a=n.proteinFile;console.log("使用真实PDB文件URL（通过代理）:",a);const r=await fetch(a);if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);c=await r.text()}console.log("PDB文件加载成功，长度:",c.length),j(c,"pdb"),await T()}catch(n){console.error("加载PDB文件失败:",n.message||n),E("PDB文件加载失败",n.message)}},U=async()=>{try{console.log("开始加载SDF文件...");const n=e.getters.pdbViewerFiles;if(console.log("loadSDFFile - pdbViewerFiles:",n),console.log("loadSDFFile - store.state.pdbViewerFiles:",e.state.pdbViewerFiles),console.log("loadSDFFile - store.getters.pdbViewerFiles:",e.getters.pdbViewerFiles),!n||!n.ligandFile){console.warn("未找到SDF文件信息，使用默认文件");const a=await fetch("/src/assets/7fui_A_HIY_8shr_A_601_ligand.sdf");if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);u=await a.text()}else{const a=n.ligandFile;console.log("使用真实SDF文件URL（通过代理）:",a);const r=await fetch(a);if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);u=await r.text()}console.log("SDF文件加载成功，长度:",u.length),j(u,"sdf"),await T()}catch(n){console.error("加载SDF文件失败:",n.message||n),E("SDF文件加载失败",n.message)}},ee=async()=>{try{console.log("开始加载CIF文件...");const n=await fetch("/src/assets/7fui_A_HIY_8shr_A_601_model_0.cif");if(!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);f=await n.text(),console.log("CIF文件加载成功，长度:",f.length),h=new Ce;const a=h.parseCIF(f);console.log("CIF文件解析完成:",a)}catch(n){console.error("CIF文件加载失败:",n),E("CIF文件加载失败",n.message)}},oe=async()=>{if(!h||!c||!u){console.warn("缺少必要文件，无法进行坐标验证");return}console.log("=== 开始坐标验证 ===");const n=h.validatePDBCoordinates(c),a=h.validateSDFCoordinates(u),r=h.generateMappingReport(n,a),m=h.getAlignmentSuggestions();return console.log("坐标验证完成:"),console.log("- 映射报告:",r),console.log("- 对齐建议:",m),{mappingReport:r,alignmentSuggestions:m}},W=async n=>{if(g.value=n,s&&s.clear(),n==="protein"?l.value={showCartoon:!0,showSticks:!1,showSpheres:!1,showSurface:!1}:n==="ligand"?l.value={showCartoon:!1,showSticks:!0,showSpheres:!1,showSurface:!1}:n==="docking"&&(l.value={showCartoon:!1,showSticks:!1,showSpheres:!1,showSurface:!1,showMixed:!0}),n==="protein")c?await T():await q();else if(n==="ligand")u?await T():await U();else if(n==="docking"){f||await ee(),c||await q(),u||await U();const a=await oe();a&&console.log("坐标验证结果:",a),await T()}},E=(n,a)=>{const r=document.getElementById("pdb-viewer");r&&(r.innerHTML=`
          <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #666; font-size: 16px;">
            <div style="text-align: center;">
              <div style="margin-bottom: 10px;">⚠️ ${n}</div>
              <div style="font-size: 14px; color: #999;">
                ${a||"无法加载文件"}
              </div>
              <button onclick="location.reload()" style="margin-top: 10px; padding: 8px 16px; background: #4fc3f7; color: white; border: none; border-radius: 4px; cursor: pointer;">
                重试
              </button>
            </div>
          </div>
        `)},te=()=>{if(g.value==="docking"&&c&&u){const a=c.split(`
`).filter(F=>F.startsWith("ATOM")).length,r=u.split(`
`);let m=0;for(let F=0;F<r.length;F++){const w=r[F].trim();if(w&&!w.startsWith("RDKit")&&!w.startsWith("M  END")){const S=w.split(/\s+/);if(S.length>=2){const V=parseInt(S[0]);if(!isNaN(V)){m=V;break}}}}v.value={filename:"分子对接复合物",atomCount:a+m,chainCount:2,residueCount:1}}},j=(n,a)=>{try{const r=n.split(`
`);if(a==="pdb"){const m=r.filter(S=>S.startsWith("ATOM")),F=new Set,w=new Set;m.forEach(S=>{if(S.length>=22){const V=S.charAt(21),R=S.substring(22,26).trim();F.add(V),w.add(R)}}),v.value={filename:"7fui_A_HIY_8shr_A_601_protein.pdb",atomCount:m.length,chainCount:F.size,residueCount:w.size}}else if(a==="sdf"){let m=0,F=0;for(let w=0;w<r.length;w++){const S=r[w].trim();if(S&&!S.startsWith("RDKit")&&!S.startsWith("M  END")){const V=S.split(/\s+/);if(V.length>=2){const R=parseInt(V[0]),Z=parseInt(V[1]);if(!isNaN(R)&&!isNaN(Z)){m=R,F=Z;break}}}}v.value={filename:"7fui_A_HIY_8shr_A_601_ligand.sdf",atomCount:m,chainCount:1,residueCount:1}}else a==="docking"&&(v.value={filename:"分子对接复合物",atomCount:0,chainCount:2,residueCount:1})}catch(r){console.error("解析文件信息失败:",r),v.value={filename:a==="pdb"?"7fui_A_HIY_8shr_A_601_protein.pdb":"7fui_A_HIY_8shr_A_601_ligand.sdf",atomCount:0,chainCount:1,residueCount:1}}},T=async()=>{try{console.log("开始加载3Dmol.js库...");const n=await $();console.log("3Dmol.js库加载成功");const a=document.getElementById("pdb-viewer");if(!a)throw new Error("找不到查看器容器元素");console.log("创建查看器...");const r={backgroundColor:y.value};s=n.createViewer(a,r),g.value==="protein"&&c?(console.log("添加PDB模型..."),s.addModel(c,"pdb")):g.value==="ligand"&&u?(console.log("添加SDF模型..."),s.addModel(u,"sdf")):g.value==="docking"&&(c&&(console.log("添加PDB模型（分子对接）..."),s.addModel(c,"pdb")),u&&(console.log("添加SDF模型（分子对接）..."),s.addModel(u,"sdf"))),K(),s.zoomTo(),s.render(),g.value==="docking"&&te(),console.log("3Dmol查看器初始化完成")}catch(n){console.error("初始化查看器失败:",n.message||n),E("加载失败",n.message||"无法加载3Dmol.js库，请检查网络连接")}},Y=()=>{const n=e.getters.pdbViewerFiles;if(console.log("updatePageInfo - pdbViewerFiles:",n),console.log("updatePageInfo - store.state.pdbViewerFiles:",e.state.pdbViewerFiles),console.log("updatePageInfo - store.getters.pdbViewerFiles:",e.getters.pdbViewerFiles),n&&n.drugName){console.log("找到PDB查看器文件信息，药物名称:",n.drugName);const a=document.querySelector(".pdb-viewer-page h1");a&&(a.textContent="分子对接");const r=document.querySelector(".viewer-description");if(r&&(r.textContent=`正在查看药物 ${n.drugName} 的分子对接结构`),n.proteinFile){const m=n.proteinFile.split("/").pop();v.value.filename=m||"protein.pdb"}}else console.log("未找到PDB查看器文件信息")},K=()=>{if(!s)return;console.log("=== 开始更新显示 ==="),console.log("当前文件类型:",g.value),console.log("显示选项:",l.value),s.setStyle({},{}),s.removeAllSurfaces();const n={C:"#909090",N:"#3050F8",O:"#FF0D0D",S:"#FFFF30",P:"#FF8000",F:"#90E050",Cl:"#1FF01F",Br:"#A62929",I:"#940094",H:"#FFFFFF",Fe:"#FFA500",Cu:"#C87533",Zn:"#7D80B0",Ca:"#3F3F3F",Mg:"#8AFF00",Na:"#AB5CF2",K:"#AB5CF2"},a=["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8","#F7DC6F","#BB8FCE","#85C1E9","#F8C471","#82E0AA","#F1948A","#85C1E9","#F7DC6F"],r=["#E74C3C","#3498DB","#2ECC71","#F39C12","#9B59B6","#1ABC9C","#E67E22","#34495E"];if(g.value==="protein")console.log("蛋白质模式渲染..."),l.value.showCartoon&&(console.log("✅ 应用卡通模式"),s.setStyle({},{cartoon:{color:"spectrum",thickness:.8,opacity:.9}})),l.value.showSticks&&(console.log("✅ 应用球棍模式 - 元素颜色"),s.setStyle({},{stick:{colorscheme:{prop:"elem",map:n},radius:.15,opacity:.8}})),l.value.showSpheres&&(console.log("✅ 应用球体模式 - 元素颜色"),s.setStyle({},{sphere:{colorscheme:{prop:"elem",map:n},radius:.6,opacity:.8}})),l.value.showSurface&&(console.log("✅ 应用表面模式 - 元素颜色（默认）"),s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.7,colorscheme:{prop:"elem",map:n}}));else if(g.value==="ligand")console.log("配体模式渲染..."),l.value.showSticks&&(console.log("✅ 应用球棍模式 - 元素颜色（默认）"),s.setStyle({},{stick:{colorscheme:{prop:"elem",map:n},radius:.2,opacity:.9}})),l.value.showSpheres&&(console.log("✅ 应用球体模式 - 元素颜色"),s.setStyle({},{sphere:{colorscheme:{prop:"elem",map:n},radius:.7,opacity:.8}})),l.value.showSurface&&(console.log("✅ 应用表面模式 - 元素颜色"),s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.6,colorscheme:{prop:"elem",map:n}})),!l.value.showSticks&&!l.value.showSpheres&&!l.value.showSurface&&(console.log("✅ 应用默认球棍模式 - 元素颜色（默认）"),s.setStyle({},{stick:{colorscheme:{prop:"elem",map:n},radius:.2,opacity:.9}}));else if(g.value==="docking"){if(console.log("分子对接模式渲染..."),l.value.showMixed)if(console.log("✅ 应用混合模式：蛋白质卡通 + 配体球棍"),s.models&&s.models.length>=2)try{s.setStyle({model:0},{cartoon:{color:"spectrum",thickness:.8,opacity:.9}}),console.log("✅ 模型0（蛋白质）卡通模式设置成功");const m={C:"#909090",N:"#3050F8",O:"#FF0D0D",S:"#FFFF30",P:"#FF8000",F:"#90E050",Cl:"#1FF01F",Br:"#A62929",I:"#940094",H:"#FFFFFF",Fe:"#FFA500",Cu:"#C87533",Zn:"#7D80B0",Ca:"#3F3F3F",Mg:"#8AFF00",Na:"#AB5CF2",K:"#AB5CF2"};s.setStyle({model:1},{stick:{colorscheme:{prop:"elem",map:m},radius:.25,opacity:.9}}),console.log("✅ 模型1（配体）球棍模式设置成功 - 元素颜色（默认）")}catch(m){console.error("❌ 模型索引选择器失败，使用全局样式:",m),s.setStyle({},{cartoon:{color:"spectrum",thickness:.8,opacity:.9}}),s.setStyle({},{stick:{colorscheme:{prop:"elem",map:n},radius:.25,opacity:.9}})}else console.log("⚠️ 模型数量不足，使用全局样式"),s.setStyle({},{cartoon:{color:"spectrum",thickness:.8,opacity:.9}}),s.setStyle({},{stick:{colorscheme:{prop:"elem",map:n},radius:.25,opacity:.9}});if(l.value.showSpheres&&(console.log("✅ 应用球体模式 - 元素颜色"),s.setStyle({},{sphere:{colorscheme:{prop:"elem",map:n},radius:.6,opacity:.8}})),l.value.showSurface)if(console.log("✅ 应用表面模式 - 蛋白质链颜色 + 配体主题色"),s.models&&s.models.length>=2)try{s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.6,colorscheme:{prop:"chain",map:a},model:0});const m=r[Math.floor(Math.random()*r.length)];s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.5,color:m,model:1})}catch(m){console.error("❌ 模型表面设置失败，使用全局表面:",m),s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.6,colorscheme:{prop:"chain",map:a}})}else s.addSurface(window.$3Dmol.SurfaceType.VDW,{opacity:.6,colorscheme:{prop:"chain",map:a}});h&&(console.log("坐标映射器状态:"),console.log("- 蛋白质原子数:",h.proteinAtoms?h.proteinAtoms.length:"undefined"),console.log("- 配体原子数:",h.ligandAtoms?h.ligandAtoms.length:"undefined"),h.coordinateSystem&&(console.log("- 坐标系原点:",h.coordinateSystem.origin),console.log("- 坐标系缩放:",h.coordinateSystem.scale))),s.models&&s.models.length>0&&(console.log("模型详情:"),s.models.forEach((m,F)=>{console.log(`模型 ${F}:`,m),console.log("- 模型类型:",m.type),console.log("- 原子数量:",m.atoms?m.atoms.length:"unknown"),console.log("- 键数量:",m.bonds?m.bonds.length:"unknown")}))}console.log("=== 显示更新完成 ==="),s.render()},se=()=>{if(!s)return;console.log("=== 开始更新颜色方案 ==="),console.log("使用元素颜色方案");const a={prop:"elem",map:{C:"#909090",N:"#3050F8",O:"#FF0D0D",S:"#FFFF30",P:"#FF8000",F:"#90E050",Cl:"#1FF01F",Br:"#A62929",I:"#940094",H:"#FFFFFF",Fe:"#FFA500",Cu:"#C87533",Zn:"#7D80B0",Ca:"#3F3F3F",Mg:"#8AFF00",Na:"#AB5CF2",K:"#AB5CF2"}};if(g.value==="protein")l.value.showSticks&&(s.setStyle({},{stick:{colorscheme:a}}),console.log("🎯 球棍模式元素颜色方案应用成功")),l.value.showSpheres&&(s.setStyle({},{sphere:{colorscheme:a}}),console.log("🎯 球体模式元素颜色方案应用成功")),l.value.showCartoon&&(s.setStyle({},{cartoon:{colorscheme:a}}),console.log("🎯 卡通模式元素颜色方案应用成功"));else if(g.value==="ligand")l.value.showSticks&&(s.setStyle({},{stick:{colorscheme:a}}),console.log("🎯 配体球棍模式元素颜色方案应用成功")),l.value.showSpheres&&(s.setStyle({},{sphere:{colorscheme:a}}),console.log("🎯 配体球体模式元素颜色方案应用成功"));else if(g.value==="docking"&&l.value.showMixed)if(s.models&&s.models.length>=2)try{s.setStyle({model:0},{cartoon:{colorscheme:a}}),console.log("🎯 蛋白质模型元素颜色方案应用成功"),s.setStyle({model:1},{stick:{colorscheme:a}}),console.log("🎯 配体模型元素颜色方案应用成功")}catch(r){console.error("❌ 模型颜色设置失败:",r),s.setStyle({},{colorscheme:a})}else s.setStyle({},{colorscheme:a});console.log("=== 元素颜色方案更新完成 ==="),s.render()},ne=()=>{s&&(s.setBackgroundColor(y.value),s.render())},le=n=>{if(!s)return;console.log("=== 应用颜色预设 ==="),console.log("预设名称:",n),console.log("使用元素颜色方案");const r={prop:"elem",map:{C:"#909090",N:"#3050F8",O:"#FF0D0D",S:"#FFFF30",P:"#FF8000",F:"#90E050",Cl:"#1FF01F",Br:"#A62929",I:"#940094",H:"#FFFFFF",Fe:"#FFA500",Cu:"#C87533",Zn:"#7D80B0",Ca:"#3F3F3F",Mg:"#8AFF00",Na:"#AB5CF2",K:"#AB5CF2"}};try{if(g.value==="protein")l.value.showCartoon&&(s.setStyle({},{cartoon:{colorscheme:r}}),console.log("🎨 卡通模式元素颜色方案应用成功")),l.value.showSticks&&(s.setStyle({},{stick:{colorscheme:r}}),console.log("🎨 球棍模式元素颜色方案应用成功")),l.value.showSpheres&&(s.setStyle({},{sphere:{colorscheme:r}}),console.log("🎨 球体模式元素颜色方案应用成功"));else if(g.value==="ligand")l.value.showSticks&&(s.setStyle({},{stick:{colorscheme:r}}),console.log("🎨 配体球棍模式元素颜色方案应用成功")),l.value.showSpheres&&(s.setStyle({},{sphere:{colorscheme:r}}),console.log("🎨 配体球体模式元素颜色方案应用成功"));else if(g.value==="docking"&&l.value.showMixed)if(s.models&&s.models.length>=2)try{s.setStyle({model:0},{cartoon:{colorscheme:r}}),console.log("🎨 蛋白质模型元素颜色方案应用成功"),s.setStyle({model:1},{stick:{colorscheme:r}}),console.log("🎨 配体模型元素颜色方案应用成功")}catch(m){console.error("❌ 模型颜色预设设置失败:",m),s.setStyle({},{colorscheme:r})}else s.setStyle({},{colorscheme:r});console.log("✅ 元素颜色方案应用成功"),s.render()}catch(m){console.error("❌ 应用颜色预设失败:",m),E("颜色预设应用失败",m.message)}},ie=()=>{L.value=!L.value};return ye(async()=>{console.log("PDBViewerPage 页面已加载"),Y();try{const n=await fetch("/src/assets/affinity_7fui_A_HIY_8shr_A_601.json");if(n.ok){const r=await n.json();i.value=r,console.log("亲和力数据加载成功:",r)}const a=await fetch("/src/assets/confidence_7fui_A_HIY_8shr_A_601_model_0.json");if(a.ok){const r=await a.json();B.value=r,console.log("置信度数据加载成功:",r)}}catch(n){console.error("加载JSON数据失败:",n)}try{await q(),await U(),await W("docking"),console.log("应用默认颜色方案：元素颜色"),p.value="element"}catch(n){console.error("页面加载时出错:",n)}}),Fe(()=>{if(s){const n=document.getElementById("pdb-viewer");n&&(n.innerHTML="")}}),we((n,a,r)=>{n.path==="/filter-results"&&e.state.filterResults&&console.log("PDB查看器页面离开前，筛选结果数据已保存"),r()}),{displayOptions:l,colorScheme:p,backgroundColor:y,currentFile:g,fileInfo:v,updateDisplay:K,updateColors:se,updateBackground:ne,switchFile:W,applyColorPreset:le,showControlPanel:L,toggleControlPanel:ie,currentDataTab:Q,affinityData:i,confidenceData:B,bioscoreValue:O,goBack:o,backButtonText:d,updatePageInfo:Y}}},De={class:"pdb-viewer-page"},xe={class:"header"},ke={class:"content"},Ae={class:"section-tabs"},_e={class:"content-display"},Be={class:"viewer-container"},Ie={class:"json-data-panel"},Me={class:"data-tabs"},Ve={class:"data-content"},Pe={key:0,class:"data-section"},ze={class:"metrics-grid"},Ne={class:"metric-card primary"},Ee={class:"metric-value"},Te={class:"metric-card"},Oe={class:"metric-value"},Re={class:"metrics-grid"},He={class:"metric-card"},Le={class:"metric-value"},qe={class:"complex-quality"},Ue={class:"metrics-grid"},We={class:"metric-card"},je={class:"metric-value"},Ye={class:"metric-card"},Ke={class:"metric-value"},Ze={key:1,class:"data-section"},Ge={class:"metrics-grid"},Xe={class:"metric-card primary"},Je={class:"metric-value"},Qe={class:"metric-card"},$e={class:"metric-value"},eo={class:"metrics-grid"},oo={class:"quality-item"},to={class:"quality-value"},so={class:"quality-bar"},no={key:0,class:"chain-interactions"},lo={class:"chain-grid"},io=["title"],ao={class:"chain-value"},ro={class:"chain-bar"},co={class:"viewer-wrapper"},po={class:"control-group"},mo={key:0},uo={class:"control-item"},go={class:"control-item"},fo={class:"control-item"},ho={key:1},vo={class:"control-item"},yo={class:"control-item"},Fo={class:"control-item"},wo={class:"control-item"},bo={key:2},Co={class:"control-item"},So={class:"control-item"},Do={class:"control-item"},xo={class:"control-group"},ko={class:"control-item"},Ao={class:"control-group"},_o={key:0,class:"info-item"},Bo={class:"value"},Io={key:1,class:"info-item"},Mo={key:2,class:"info-item"},Vo={class:"info-item"},Po={class:"value"},zo={class:"info-item"},No={class:"value"},Eo={class:"info-item"},To={class:"value"};function Oo(H,e,d,o,l,p){var h;const y=P("ArrowLeft"),g=P("el-icon"),v=P("el-button"),s=P("Connection"),c=P("Grid"),u=P("List"),f=P("Setting");return x(),D("div",De,[t("div",xe,[k(v,{onClick:o.goBack,type:"text",class:"back-btn"},{default:z(()=>[k(g,null,{default:z(()=>[k(y)]),_:1}),C(" "+b(o.backButtonText),1)]),_:1},8,["onClick"]),e[28]||(e[28]=t("h1",null,"分子对接",-1)),e[29]||(e[29]=t("p",{class:"viewer-description"},null,-1))]),t("div",ke,[t("div",Ae,[t("button",{class:N(["tab-button",{active:o.currentFile==="docking"}]),onClick:e[0]||(e[0]=i=>o.switchFile("docking"))},[k(g,null,{default:z(()=>[k(s)]),_:1}),e[30]||(e[30]=C(" 分子对接 ",-1))],2),t("button",{class:N(["tab-button",{active:o.currentFile==="protein"}]),onClick:e[1]||(e[1]=i=>o.switchFile("protein"))},[k(g,null,{default:z(()=>[k(c)]),_:1}),e[31]||(e[31]=C(" 蛋白质结构 (PDB) ",-1))],2),t("button",{class:N(["tab-button",{active:o.currentFile==="ligand"}]),onClick:e[2]||(e[2]=i=>o.switchFile("ligand"))},[k(g,null,{default:z(()=>[k(u)]),_:1}),e[32]||(e[32]=C(" 配体分子 (SDF) ",-1))],2)]),t("div",_e,[t("div",Be,[t("div",Ie,[t("div",Me,[t("button",{class:N(["data-tab",{active:o.currentDataTab==="affinity"}]),onClick:e[3]||(e[3]=i=>o.currentDataTab="affinity")}," 亲和力数据 ",2),t("button",{class:N(["data-tab",{active:o.currentDataTab==="confidence"}]),onClick:e[4]||(e[4]=i=>o.currentDataTab="confidence")}," 置信度数据 ",2)]),t("div",Ve,[o.currentDataTab==="affinity"?(x(),D("div",Pe,[e[40]||(e[40]=t("h3",null,"亲和力预测结果",-1)),t("div",ze,[t("div",Ne,[e[33]||(e[33]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"🎯"),t("span",{class:"metric-title",title:"亲和力预测值"},"亲和力预测")],-1)),t("div",Ee,b(((h=o.affinityData.affinity_pred_value)==null?void 0:h.toFixed(4))||"N/A"),1)]),t("div",Te,[e[34]||(e[34]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"📊"),t("span",{class:"metric-title",title:"成功预测的概率"},"二元概率")],-1)),t("div",Oe,b((o.affinityData.affinity_probability_binary*100).toFixed(2)||"N/A")+"%",1)])]),t("div",Re,[t("div",He,[e[35]||(e[35]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"📊"),t("span",{class:"metric-title",title:"生物分数"},"Bioscore分数")],-1)),t("div",Le,b(o.bioscoreValue||"N/A"),1)])]),t("div",qe,[e[38]||(e[38]=t("h4",null,"复合物质量评估",-1)),t("div",Ue,[t("div",We,[e[36]||(e[36]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"🔗"),t("span",{class:"metric-title",title:"接口模板建模质量"},"iPTM分数")],-1)),t("div",je,b((o.confidenceData.iptm*100).toFixed(2)||"N/A")+"%",1)]),t("div",Ye,[e[37]||(e[37]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"🔗"),t("span",{class:"metric-title",title:"接口预测的局部距离差异测试分数，评估接口结构质量"},"ipLDDT分数")],-1)),t("div",Ke,b((o.confidenceData.complex_iplddt*100).toFixed(2)||"N/A")+"%",1)])]),e[39]||(e[39]=t("div",{class:"quality-grid"},null,-1))])])):I("",!0),o.currentDataTab==="confidence"?(x(),D("div",Ze,[e[45]||(e[45]=t("h3",null,"模型置信度评估",-1)),t("div",Ge,[t("div",Xe,[e[41]||(e[41]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"⭐"),t("span",{class:"metric-title",title:"模型预测的整体可信度"},"整体置信度")],-1)),t("div",Je,b((o.confidenceData.confidence_score*100).toFixed(2)||"N/A")+"%",1)]),t("div",Qe,[e[42]||(e[42]=t("div",{class:"metric-header"},[t("span",{class:"metric-icon"},"🔬"),t("span",{class:"metric-title",title:"模板建模质量评估"},"PTM分数")],-1)),t("div",$e,b((o.confidenceData.ptm*100).toFixed(2)||"N/A")+"%",1)])]),t("div",eo,[t("div",oo,[e[43]||(e[43]=t("div",{class:"quality-label",title:"预测的局部距离差异测试分数，评估整体结构质量"},"pLDDT分数",-1)),t("div",to,b((o.confidenceData.complex_plddt*100).toFixed(2)||"N/A")+"%",1),t("div",so,[t("div",{class:"quality-fill",style:G({width:o.confidenceData.complex_plddt*100+"%"})},null,4)])])]),o.confidenceData.chains_ptm?(x(),D("div",no,[e[44]||(e[44]=t("h4",null,"链间相互作用质量",-1)),t("div",lo,[(x(!0),D(ge,null,fe(o.confidenceData.chains_ptm,(i,B)=>(x(),D("div",{class:"chain-item",key:B},[t("div",{class:"chain-label",title:`链 ${B} 的模板建模质量评估分数`},b(B==1?"配体":"靶点"),9,io),t("div",ao,b((i*100).toFixed(2))+"%",1),t("div",ro,[t("div",{class:"chain-fill",style:G({width:i*100+"%"})},null,4)])]))),128))])])):I("",!0)])):I("",!0)])]),t("div",co,[t("div",{class:"control-panel-toggle",onClick:e[5]||(e[5]=(...i)=>o.toggleControlPanel&&o.toggleControlPanel(...i))},[k(g,null,{default:z(()=>[k(f)]),_:1}),e[46]||(e[46]=t("span",null,"控制面板",-1))]),t("div",{class:N(["floating-controls-panel",{expanded:o.showControlPanel}])},[t("div",po,[e[57]||(e[57]=t("h3",null,"显示选项",-1)),o.currentFile==="docking"?(x(),D("div",mo,[t("div",uo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[6]||(e[6]=i=>o.displayOptions.showMixed=i),onChange:e[7]||(e[7]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showMixed]]),e[47]||(e[47]=C(" 混合模式 (蛋白质卡通+配体球棍) ",-1))])]),t("div",go,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[8]||(e[8]=i=>o.displayOptions.showSpheres=i),onChange:e[9]||(e[9]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSpheres]]),e[48]||(e[48]=C(" 球体模式 ",-1))])]),t("div",fo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[10]||(e[10]=i=>o.displayOptions.showSurface=i),onChange:e[11]||(e[11]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSurface]]),e[49]||(e[49]=C(" 表面模式 ",-1))])])])):I("",!0),o.currentFile==="protein"?(x(),D("div",ho,[t("div",vo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[12]||(e[12]=i=>o.displayOptions.showCartoon=i),onChange:e[13]||(e[13]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showCartoon]]),e[50]||(e[50]=C(" 卡通模式 ",-1))])]),t("div",yo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[14]||(e[14]=i=>o.displayOptions.showSticks=i),onChange:e[15]||(e[15]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSticks]]),e[51]||(e[51]=C(" 球棍模式 ",-1))])]),t("div",Fo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[16]||(e[16]=i=>o.displayOptions.showSpheres=i),onChange:e[17]||(e[17]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSpheres]]),e[52]||(e[52]=C(" 球体模式 ",-1))])]),t("div",wo,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[18]||(e[18]=i=>o.displayOptions.showSurface=i),onChange:e[19]||(e[19]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSurface]]),e[53]||(e[53]=C(" 表面模式 ",-1))])])])):I("",!0),o.currentFile==="ligand"?(x(),D("div",bo,[t("div",Co,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[20]||(e[20]=i=>o.displayOptions.showSticks=i),onChange:e[21]||(e[21]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSticks]]),e[54]||(e[54]=C(" 球棍模式 ",-1))])]),t("div",So,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[22]||(e[22]=i=>o.displayOptions.showSpheres=i),onChange:e[23]||(e[23]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSpheres]]),e[55]||(e[55]=C(" 球体模式 ",-1))])]),t("div",Do,[t("label",null,[A(t("input",{type:"checkbox","onUpdate:modelValue":e[24]||(e[24]=i=>o.displayOptions.showSurface=i),onChange:e[25]||(e[25]=(...i)=>o.updateDisplay&&o.updateDisplay(...i))},null,544),[[_,o.displayOptions.showSurface]]),e[56]||(e[56]=C(" 表面模式 ",-1))])])])):I("",!0)]),t("div",xo,[e[59]||(e[59]=t("h3",null,"背景颜色",-1)),t("div",ko,[A(t("select",{"onUpdate:modelValue":e[26]||(e[26]=i=>o.backgroundColor=i),onChange:e[27]||(e[27]=(...i)=>o.updateBackground&&o.updateBackground(...i))},e[58]||(e[58]=[t("option",{value:"white"},"白色",-1),t("option",{value:"black"},"黑色",-1),t("option",{value:"gray"},"灰色",-1),t("option",{value:"blue"},"蓝色",-1)]),544),[[he,o.backgroundColor]])])]),e[67]||(e[67]=X('<div class="control-group" data-v-e1b8d7e2><h3 data-v-e1b8d7e2>颜色方案</h3><div class="control-item" data-v-e1b8d7e2><p data-v-e1b8d7e2>当前使用元素颜色方案</p><div class="color-examples" data-v-e1b8d7e2><div class="color-example" data-v-e1b8d7e2><span class="color-dot" style="background:#909090;" data-v-e1b8d7e2></span><span data-v-e1b8d7e2>碳原子 (C)</span></div><div class="color-example" data-v-e1b8d7e2><span class="color-dot" style="background:#3050F8;" data-v-e1b8d7e2></span><span data-v-e1b8d7e2>氮原子 (N)</span></div><div class="color-example" data-v-e1b8d7e2><span class="color-dot" style="background:#FF0D0D;" data-v-e1b8d7e2></span><span data-v-e1b8d7e2>氧原子 (O)</span></div><div class="color-example" data-v-e1b8d7e2><span class="color-dot" style="background:#FFFF30;" data-v-e1b8d7e2></span><span data-v-e1b8d7e2>硫原子 (S)</span></div><div class="color-example" data-v-e1b8d7e2><span class="color-dot" style="background:#FF8000;" data-v-e1b8d7e2></span><span data-v-e1b8d7e2>磷原子 (P)</span></div></div></div></div>',1)),t("div",Ao,[e[66]||(e[66]=t("h3",null,"文件信息",-1)),o.currentFile!=="docking"?(x(),D("div",_o,[e[60]||(e[60]=t("span",{class:"label"},"文件名:",-1)),t("span",Bo,b(o.fileInfo.filename),1)])):I("",!0),o.currentFile==="docking"?(x(),D("div",Io,e[61]||(e[61]=[t("span",{class:"label"},"蛋白质:",-1),t("span",{class:"value"},"某种蛋白质",-1)]))):I("",!0),o.currentFile==="docking"?(x(),D("div",Mo,e[62]||(e[62]=[t("span",{class:"label"},"配体:",-1),t("span",{class:"value"},"某种配体",-1)]))):I("",!0),t("div",Vo,[e[63]||(e[63]=t("span",{class:"label"},"原子数:",-1)),t("span",Po,b(o.fileInfo.atomCount),1)]),t("div",zo,[e[64]||(e[64]=t("span",{class:"label"},"链数:",-1)),t("span",No,b(o.fileInfo.chainCount),1)]),t("div",Eo,[e[65]||(e[65]=t("span",{class:"label"},"残基数:",-1)),t("span",To,b(o.fileInfo.residueCount),1)])])],2),e[68]||(e[68]=X('<div class="mol-container" data-v-e1b8d7e2><div id="pdb-viewer" data-v-e1b8d7e2></div></div><div class="interaction-info" data-v-e1b8d7e2><div class="interaction-grid" data-v-e1b8d7e2><div class="interaction-item" data-v-e1b8d7e2><span class="icon" data-v-e1b8d7e2>🖱️</span><span data-v-e1b8d7e2>左键拖拽 - 旋转</span></div><div class="interaction-item" data-v-e1b8d7e2><span class="icon" data-v-e1b8d7e2>🔍</span><span data-v-e1b8d7e2>滚轮 - 缩放</span></div><div class="interaction-item" data-v-e1b8d7e2><span class="icon" data-v-e1b8d7e2>⌨️</span><span data-v-e1b8d7e2>Ctrl+左键 - 平移</span></div></div></div>',2))])])])])])}const Ho=ae(Se,[["render",Oo],["__scopeId","data-v-e1b8d7e2"]]);export{Ho as default};
