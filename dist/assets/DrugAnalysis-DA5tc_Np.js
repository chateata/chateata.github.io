import{_ as K,c as h,o as g,b as s,e as w,w as L,g as D,f as R,n as v,t as Q,v as W,E as p,F as X,q as Y,m as z,y as f,a1 as T,O as $,a2 as tt,D as et}from"./index-BaLn3tjY.js";import{healthAPI as st,drugAnalysisAPI as E}from"./index-Dr8YfNte.js";import{r as at,a as lt}from"./rightlist-BSXjGzwz.js";import"./index-NIGUFBhG.js";import"./index-Bn9PLWWT.js";const ot={name:"DrugAnalysis",components:{articleDetail:lt,rightlist:at},setup(){const I=f(!1),e=f(!1),x=f(!1),t=f(null),m=f(""),C=f(""),k=f(!1),S=f(null),_=f(0),u=f(""),y=T({molecule:"",name:"",disease:"",properties:["molecular_weight","logp","hbd","hba"],options:{}}),l=T({drugs:"",analysisType:"comprehensive",options:{}}),O=async()=>{var a,i;try{const n=await st.check();console.log("Health check result:",n),I.value=!0,u.value=""}catch(n){console.error("Health check error:",n),I.value=!1,u.value="服务连接失败: "+(((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.detail)||n.message||"未知错误")}},N=async()=>{var i,n,o,d,b,r;if(!y.molecule.trim()){u.value="请输入分子结构";return}const a=y.molecule.trim();if(!M(a)){u.value="请输入有效的SMILES格式分子结构";return}e.value=!0,u.value="";try{const c=await E.analyze({molecule:a,name:y.name,disease:y.disease||"",include_images:!0,include_radar_chart:!0});t.value={taskId:c.task_id||c.taskId||Date.now().toString(),status:"completed",properties:((i=c.data)==null?void 0:i.Physical_Chemical_Properties)||{},admet:((n=c.data)==null?void 0:n.ADMET_Properties)||{},predictions:c.data||{},results:c,detailObj:c.data||{}}}catch(c){console.error("Analysis error:",c),(d=(o=c.response)==null?void 0:o.data)!=null&&d.msg?u.value="分析失败: "+c.response.data.msg:u.value="分析失败: "+(((r=(b=c.response)==null?void 0:b.data)==null?void 0:r.detail)||c.message)}finally{e.value=!1}},M=a=>{const i=/^[A-Za-z0-9()[\]{}@+\-=\#$%:;.,]+$/,o=["C","N","O","S","P","F","Cl","Br","I","H"].some(c=>a.includes(c)),d=(a.match(/\(/g)||[]).length,b=(a.match(/\)/g)||[]).length,r=d===b;return i.test(a)&&o&&r},H=a=>{y.molecule=a,B("SMILES已复制到输入框")},V=a=>{l.drugs.trim()?l.drugs+=`
`+a:l.drugs=a,B("SMILES已添加到批量输入框")},B=a=>{const i=document.createElement("div");i.textContent=a,i.style.cssText=`
        position: fixed;
        top: 20px;
        right: 20px;
        background: #67C23A;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        z-index: 1000;
        font-size: 14px;
        box-shadow: 0 4px 12px rgba(103, 194, 58, 0.3);
      `,document.body.appendChild(i),setTimeout(()=>{document.body.removeChild(i)},2e3)},F=()=>{l.drugs=`CC(C)(C)OC(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O
CC(C)CC1=CC=C(C=C1)C(C)C(=O)O
CC(=O)NC1=CC=C(O)C=C1`,B("已加载止痛药示例")},P=()=>{l.drugs=`CC(C)NCC(O)COC1=CC=CC=C1
CC(=O)NC1=CC=C(O)C=C1
CC(C)CC1=CC=C(C=C1)C(C)C(=O)O`,B("已加载感冒药示例")},U=()=>{l.drugs=`CC(C)(C)OC(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O
CC(C)CC1=CC=C(C=C1)C(C)C(=O)O
CC(=O)NC1=CC=C(O)C=C1
CC(C)NCC(O)COC1=CC=CC=C1`,B("已加载心血管药示例")},q=async()=>{var n,o,d,b;if(!l.drugs.trim()){u.value="请输入药物列表";return}const a=l.drugs.split(`
`).filter(r=>r.trim()),i=a.filter(r=>!M(r));if(i.length>0){u.value=`发现无效的SMILES格式: ${i.join(", ")}`;return}x.value=!0,u.value="";try{console.log("Sending batch analysis request with drugs:",a);const r=await E.analyzeBatch({drugs:a,disease:l.disease||"",include_images:!0,include_radar_chart:!0});console.log("Batch analysis result:",r),m.value=r.task_id||r.taskId||r.id||Date.now().toString(),r.data&&r.data.status?C.value=r.data.status:C.value="processing",console.log("Batch task ID:",m.value),console.log("Initial batch status:",C.value)}catch(r){console.error("Batch analysis error:",r),(o=(n=r.response)==null?void 0:n.data)!=null&&o.msg?u.value="批量分析失败: "+r.response.data.msg:u.value="批量分析失败: "+(((b=(d=r.response)==null?void 0:d.data)==null?void 0:b.detail)||r.message)}finally{x.value=!1}},j=async()=>{var a,i;if(m.value)try{const n=await E.getBatchStatus(m.value);if(console.log("Batch status result:",n),n&&n.data){console.log("Batch status data:",n.data);const o=n.data;if(o.status?C.value=o.status:o.state?C.value=o.state:o.task_status?C.value=o.task_status:o.progress?C.value=o.progress:o.results&&o.results.length>0?C.value="completed":o.processing?C.value="processing":C.value="unknown",C.value==="completed"||C.value==="finished"){console.log("Task completed, updating analysis results"),console.log("Status data results:",o.results),console.log("Status data data:",o.data);let d={};o.results&&Array.isArray(o.results)?(d={...o.results[0]},d&&m.value&&(d.moleculeImageId=`${m.value}_0`,console.log("Generated molecule image ID for first result:",d.moleculeImageId)),console.log("Using first result from batch:",d)):o.data?d={...o.data}:o.results&&(d={...o.results});const b=o.results||[];b.forEach((r,c)=>{r&&m.value&&(r.moleculeImageId=`${m.value}_${c}`,console.log(`Generated molecule image ID for result ${c}:`,r.moleculeImageId))}),t.value={taskId:m.value,status:"completed",results:n,detailObj:d,batchResults:b},_.value=0,console.log("Updated analysis results:",t.value)}}else typeof n=="string"?C.value=n:C.value="unknown";console.log("Updated batch status:",C.value),C.value==="completed"&&A()}catch(n){console.error("Batch status error:",n),u.value="获取任务状态失败: "+(((i=(a=n.response)==null?void 0:a.data)==null?void 0:i.detail)||n.message)}},G=()=>{k.value||(k.value=!0,S.value=setInterval(()=>{j()},5e3),console.log("Started auto refresh"))},A=()=>{S.value&&(clearInterval(S.value),S.value=null),k.value=!1,console.log("Stopped auto refresh")},Z=async()=>{if(!m.value){alert("没有活跃的批量任务");return}try{const a=await E.getBatchStatus(m.value);console.log("=== 批量任务调试信息 ==="),console.log("任务ID:",m.value),console.log("完整响应:",a),console.log("响应类型:",typeof a),console.log("响应键:",Object.keys(a)),a.data&&(console.log("Data键:",Object.keys(a.data)),console.log("Data内容:",a.data)),console.log("====================="),alert(`调试信息已输出到控制台
任务ID: ${m.value}
状态: ${C.value}`)}catch(a){console.error("调试失败:",a),alert("调试失败: "+a.message)}},J=a=>{if(_.value=a,t.value&&t.value.batchResults){const i=t.value.batchResults[a];if(i&&t.value.taskId){const n=`${t.value.taskId}_${a}`;i.moleculeImageId=n,console.log(`Selected batch result ${a}, molecule image ID: ${n}`)}t.value.detailObj={...i},console.log("Selected batch result:",t.value.detailObj),console.log("Selected batch result moleculeImageId:",t.value.detailObj.moleculeImageId)}};return $(()=>{O()}),tt(()=>{A()}),{isServiceOnline:I,analyzing:e,batchAnalyzing:x,analysisResults:t,batchTaskId:m,batchStatus:C,autoRefreshing:k,errorMessage:u,singleDrugData:y,batchDrugData:l,checkHealth:O,analyzeSingleDrug:N,analyzeBatchDrugs:q,checkBatchStatus:j,startAutoRefresh:G,stopAutoRefresh:A,copySMILES:H,copyBatchSMILES:V,loadExample1:F,loadExample2:P,loadExample3:U,debugBatchStatus:Z,selectBatchResult:J,selectedBatchIndex:_}}},nt={class:"drug-analysis"},rt={class:"header"},it={class:"container"},Ct={class:"analysis-section"},ct={class:"form-group"},ut={class:"example-smiles"},dt={class:"batch-examples"},gt={class:"example-buttons"},mt=["disabled"],ht={key:0,class:"results-section"},vt={key:0,class:"batch-overview"},bt={class:"batch-summary"},ft={class:"batch-drugs"},yt=["onClick"],Ot={class:"drug-number"},pt={class:"drug-name"},kt={class:"drug-smiles"},St={class:"results-layout"},It={class:"main-content-left"},_t={class:"sidebar"},Bt={key:1,class:"batch-status"},Dt={class:"task-info"},Rt={key:0},xt={key:1},Et={key:2},At={key:3},wt={key:4},Nt={class:"status-actions"},Mt={key:2,class:"error-message"};function jt(I,e,x,t,m,C){const k=R("ArrowLeft"),S=R("el-icon"),_=R("el-button"),u=R("articleDetail"),y=R("rightlist");return g(),h("div",nt,[s("div",rt,[w(_,{onClick:e[0]||(e[0]=l=>I.$router.push("/")),type:"text",class:"back-btn"},{default:L(()=>[w(S,null,{default:L(()=>[w(k)]),_:1}),e[14]||(e[14]=D(" 返回 ",-1))]),_:1,__:[14]}),e[15]||(e[15]=s("h1",null,"药物分析",-1))]),s("div",it,[s("div",Ct,[e[23]||(e[23]=s("h3",null,"批量药物分析",-1)),s("div",ct,[Q(s("textarea",{"onUpdate:modelValue":e[1]||(e[1]=l=>t.batchDrugData.drugs=l),placeholder:`CC(C)(C)OC(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O
CC(C)CC1=CC=C(C=C1)C(C)C(=O)O
CC1=CC=C(C=C1)C2=CC(=NN2C3=CC=C(C=C3)S(=O)(=O)N)C(F)(F)F`,rows:"5",class:"form-control"},null,512),[[W,t.batchDrugData.drugs]]),e[22]||(e[22]=s("small",{class:"form-help"},"每行输入一个有效的SMILES格式分子结构",-1)),s("div",ut,[e[21]||(e[21]=s("strong",null,"批量分析SMILES示例（点击复制）：",-1)),s("ul",null,[s("li",null,[s("code",{onClick:e[2]||(e[2]=l=>t.copyBatchSMILES("CC(C)(C)OC(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O"))},"CC(C)(C)OC(=O)N[C@@H](CC1=CC=CC=C1)C(=O)O"),e[16]||(e[16]=D(" - 阿司匹林",-1))]),s("li",null,[s("code",{onClick:e[3]||(e[3]=l=>t.copyBatchSMILES("CC(C)CC1=CC=C(C=C1)C(C)C(=O)O"))},"CC(C)CC1=CC=C(C=C1)C(C)C(=O)O"),e[17]||(e[17]=D(" - 布洛芬",-1))]),s("li",null,[s("code",{onClick:e[4]||(e[4]=l=>t.copyBatchSMILES("CC(=O)NC1=CC=C(O)C=C1"))},"CC(=O)NC1=CC=C(O)C=C1"),e[18]||(e[18]=D(" - 对乙酰氨基酚",-1))]),s("li",null,[s("code",{onClick:e[5]||(e[5]=l=>t.copyBatchSMILES("CC(C)NCC(O)COC1=CC=CC=C1"))},"CC(C)NCC(O)COC1=CC=CC=C1"),e[19]||(e[19]=D(" - 扑尔敏",-1))])]),s("div",dt,[e[20]||(e[20]=s("strong",null,"常用药物组合示例：",-1)),s("div",gt,[s("button",{onClick:e[6]||(e[6]=(...l)=>t.loadExample1&&t.loadExample1(...l)),class:"example-btn"},"加载示例1（止痛药）"),s("button",{onClick:e[7]||(e[7]=(...l)=>t.loadExample2&&t.loadExample2(...l)),class:"example-btn"},"加载示例2（感冒药）"),s("button",{onClick:e[8]||(e[8]=(...l)=>t.loadExample3&&t.loadExample3(...l)),class:"example-btn"},"加载示例3（心血管药）")])])])]),s("button",{onClick:e[9]||(e[9]=(...l)=>t.analyzeBatchDrugs&&t.analyzeBatchDrugs(...l)),disabled:t.batchAnalyzing,class:"btn btn-primary"},p(t.batchAnalyzing?"批量分析中...":"开始批量分析"),9,mt)]),t.analysisResults?(g(),h("div",ht,[e[24]||(e[24]=s("h3",null,"分析结果",-1)),t.analysisResults.batchResults&&t.analysisResults.batchResults.length>1?(g(),h("div",vt,[s("div",bt,[s("p",null,"共分析了 "+p(t.analysisResults.batchResults.length)+" 个药物",1),s("div",ft,[(g(!0),h(X,null,Y(t.analysisResults.batchResults,(l,O)=>(g(),h("div",{key:O,class:et(["batch-drug-item",{active:t.selectedBatchIndex===O}]),onClick:N=>t.selectBatchResult(O)},[s("span",Ot,"药物 "+p(O+1),1),s("span",pt,p(l.name||`药物${O+1}`),1),s("span",kt,p(l.smiles||l.molecule||"未知"),1)],10,yt))),128))])])])):v("",!0),s("div",St,[s("div",It,[t.analysisResults.detailObj?(g(),z(u,{key:0,detailObj:t.analysisResults.detailObj},null,8,["detailObj"])):v("",!0)]),s("div",_t,[t.analysisResults.detailObj?(g(),z(y,{key:0,detailObj:t.analysisResults.detailObj,taskId:t.analysisResults.taskId},null,8,["detailObj","taskId"])):v("",!0)])])])):v("",!0),t.batchTaskId?(g(),h("div",Bt,[e[25]||(e[25]=s("h3",null,"批量任务状态",-1)),s("div",Dt,[s("p",null,"任务ID: "+p(t.batchTaskId),1),s("p",null,"状态: "+p(t.batchStatus),1),t.batchStatus==="processing"||t.batchStatus==="running"?(g(),h("p",Rt,"正在处理中，请稍候...")):v("",!0),t.batchStatus==="completed"||t.batchStatus==="finished"?(g(),h("p",xt,"分析完成！")):v("",!0),t.batchStatus==="pending"||t.batchStatus==="queued"?(g(),h("p",Et,"任务已排队，等待处理...")):v("",!0),t.batchStatus==="failed"||t.batchStatus==="error"?(g(),h("p",At,"任务执行失败")):v("",!0),t.batchStatus==="unknown"?(g(),h("p",wt,"状态未知，请刷新查看")):v("",!0)]),s("div",Nt,[s("button",{onClick:e[10]||(e[10]=(...l)=>t.checkBatchStatus&&t.checkBatchStatus(...l)),class:"btn btn-secondary"},"刷新状态"),t.batchStatus==="processing"||t.batchStatus==="running"||t.batchStatus==="pending"?(g(),h("button",{key:0,onClick:e[11]||(e[11]=(...l)=>t.startAutoRefresh&&t.startAutoRefresh(...l)),class:"btn btn-primary"}," 自动刷新 ")):v("",!0),t.autoRefreshing?(g(),h("button",{key:1,onClick:e[12]||(e[12]=(...l)=>t.stopAutoRefresh&&t.stopAutoRefresh(...l)),class:"btn btn-warning"}," 停止自动刷新 ")):v("",!0),s("button",{onClick:e[13]||(e[13]=(...l)=>t.debugBatchStatus&&t.debugBatchStatus(...l)),class:"btn btn-info"},"调试信息")])])):v("",!0),t.errorMessage?(g(),h("div",Mt,[e[26]||(e[26]=s("h4",null,"错误信息",-1)),s("p",null,p(t.errorMessage),1)])):v("",!0)])])}const Ft=K(ot,[["render",jt],["__scopeId","data-v-d1e8cb2f"]]);export{Ft as default};
