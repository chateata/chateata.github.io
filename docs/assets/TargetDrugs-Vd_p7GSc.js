import{_ as Ee,P as xe,I as Re,Q as Te,R as Ue,H as Fe,l as Ge,S as je,T as Ne,M as ze,k as Je,c as y,o as p,b as e,e as f,n as D,w as m,g as L,f as B,E as k,D as N,t as be,U as Ie,F as Se,q as Me,V as We,m as R,y as E,z as ge,A as Ve,O as $e,u as Oe,W as h}from"./index-BaLn3tjY.js";import{targetAPI as J,deepseekAPI as V,drugRepurposeAPI as fe}from"./index-Dr8YfNte.js";import"./index-NIGUFBhG.js";const Qe={name:"TargetDrugs",components:{ArrowLeft:Je,Connection:ze,List:Ne,Grid:je,Loading:Ge,ArrowDown:Fe,Refresh:Ue,Filter:Te,MagicStick:Re,Plus:xe},setup(){const F=Ve(),t=Oe(),q=E({drugs:!1,multiAgent:!1,sequence:!1,structure:!1,filtering:!1,repurpose:!1,statusCheck:!1}),n=E(null),G=ge(()=>F.getters.currentTarget),$=E([]),O=E(null),w=ge(()=>F.getters.generatedDrugs),T=(s,o)=>{const i=new Set(o.map(l=>l.smiles).filter(l=>l&&l!=="Unknown")),u=s.filter(l=>!l.smiles||l.smiles==="Unknown"?!0:!i.has(l.smiles));return{uniqueMolecules:u,duplicateCount:s.length-u.length,allDuplicates:u.length===0}},ee=async()=>{var s,o,i,u;if(G.value){if(w.value&&w.value.rows&&w.value.rows.length>0){console.log("从store中获取到药物数据:",w.value);const l=w.value.rows||[],c=w.value.target_info||null,a=new Map;l.forEach(r=>{const g=r.drugId;if(!g){console.warn("发现无效的drugId:",r);return}if(!a.has(g))a.set(g,r);else{const v=a.get(g);(r.phase>v.phase||r.phase===v.phase&&r.status&&!v.status)&&a.set(g,r)}});const _=Array.from(a.values());console.log("从store获取的药物数据去重后:",_),$.value=_,O.value=c,_.length>0&&h.success(`从缓存中获取到 ${_.length} 个唯一药物`);return}q.value.drugs=!0;try{console.log("开始加载药物数据，靶点ID:",G.value);const l=await J.getDrugsByTargetId(G.value,1e3);if(console.log("药物API完整响应:",l),l.code===0&&l.data){console.log("药物数据详情:",l.data);const c=((s=l.data.drugs)==null?void 0:s.rows)||[];console.log("原始药物数据:",c),console.log("API报告的唯一药物数量:",(o=l.data.drugs)==null?void 0:o.uniqueDrugs),console.log("API报告的总记录数:",(i=l.data.drugs)==null?void 0:i.count);const a=((u=l.data.drugs)==null?void 0:u.uniqueDrugs)||0,_=c.length;a>_&&console.warn(`API报告有${a}个唯一药物，但只返回了${_}条记录，可能存在分页问题`);const r=new Map;c.forEach(v=>{const M=v.drugId;if(!M){console.warn("发现无效的drugId:",v);return}if(!r.has(M))r.set(M,v);else{const I=r.get(M);(v.phase>I.phase||v.phase===I.phase&&v.status&&!I.status)&&r.set(M,v)}});const g=Array.from(r.values());if(console.log("去重后的药物数据:",g),console.log("去重统计 - 原始数量:",c.length,"去重后数量:",g.length,"API报告唯一数量:",a),$.value=g,O.value=l.data.target_info||null,console.log("设置后的药物列表长度:",$.value.length),console.log("设置后的靶点信息:",O.value),$.value.length===0)h.info("该靶点暂无相关药物信息");else{const v=g.length;h.success(`成功找到 ${v} 个唯一药物`)}}else throw console.error("API响应格式错误:",l),new Error(l.msg||"获取药物数据失败")}catch(l){console.error("获取药物数据失败:",l),h.error(`获取药物数据失败: ${l.message}`),$.value=[]}finally{q.value.drugs=!1}}},pe=s=>({0:"临床前",1:"I期临床",2:"II期临床",3:"III期临床",4:"IV期临床",5:"已批准"})[s]||`阶段${s}`,z=s=>({0:"info",1:"warning",2:"warning",3:"warning",4:"success",5:"success"})[s]||"info",ve=s=>{const o=s.toLowerCase();return o.includes("completed")||o.includes("approved")?"success":o.includes("recruiting")||o.includes("active")?"warning":o.includes("terminated")||o.includes("withdrawn")?"danger":"info"},re=async()=>{q.value.multiAgent=!0;const s=ue("multiAgent");try{S(1,6,15),b.value="第一步：正在初始化多智能体系统...";const o=G.value;if(!o)throw new Error("未找到靶点ID");S(2,6,30),b.value="第二步：智能体A正在基于结构生成分子...";let i=[];try{const r=await J.convertEnsembleToPDB(o);if(r.success&&r.pdbIds.length>0){const g=r.pdbIds[0],v=await J.generateBySequence(g);v.success&&(i=W(v.data,"多智能体生成"),console.log("基于结构生成成功，获得分子数量:",i.length))}}catch(r){console.warn("基于结构生成失败，继续其他方法:",r)}S(3,6,45),b.value="第三步：智能体B正在基于序列生成分子...";let u=[];try{const r=await J.convertEnsembleToPDB(o);if(r.success&&r.pdbIds.length>0){const g=r.pdbIds[0],v=await V.createTask(g,5);if(v.success){const M=v.job_id;n.value=M;let I="pending",le=60,x=0;for(;x<le&&I!=="completed";){await new Promise(C=>setTimeout(C,5e3));try{const C=await V.getJobStatus(M);if(C.success&&(I=C.status,I==="failed"))throw new Error(`任务执行失败: ${C.error}`)}catch(C){console.warn("检查任务状态时出错:",C)}x++}if(I==="completed"){const C=await V.getJobResults(M);if(C.success){const P={success:!0,job_id:M,message:"分子生成成功",data:{pdb_id:g,timestamp:C.data.timestamp,status:C.data.status,summary:C.data.summary,pockets:C.data.pockets,molecules_by_pocket:C.data.molecules_by_pocket}};u=W(P.data,"多智能体生成"),console.log("基于序列生成成功，获得分子数量:",u.length)}}}}}catch(r){console.warn("基于序列生成失败，继续其他方法:",r)}S(4,6,60),b.value="第四步：智能体C正在基于药物再利用生成分子...";let l=[];try{let r="";if(F.getters.currentDisease)r=F.getters.currentDisease;else{const g=await J.getDiseasesByTargetId(o,!1,.1,10);g.code===0&&g.data&&g.data.results&&g.data.results.length>0&&(r=g.data.results[0].disease_name)}if(r){const g={disease_name:r,custom_file_name:"demo",top_k:5},v=await fe.predict(g);if(v.code===0){const M=v.data.predictions||[];if(M.length>0){const I=M.map(x=>x.drug_name).filter(Boolean),le=await fe.getBatchSMILES(I);l=M.map((x,C)=>{const P=le[x.drug_name]||"Unknown",ae=P&&P!=="Unknown";return{id:`multiagent-repurpose-${Date.now()}-${C}`,name:x.drug_name||`Drug ${C+1}`,smiles:P,moleculeImage:Q(),generationMethod:"多智能体生成",score:Math.abs(x.score||0),selected:!1,confidence:ae?.9:.8,compositeScore:Math.abs(x.score||0),qualityLabel:ae?"excellent":"good",molecularWeight:ae?X(P):300,logp:ae?ie(P):2,pocket:"Unknown",pocketIndex:1,drugbankId:x.drugbank_id||"",originalScore:x.score||0,hasSMILES:ae}}),console.log("药物再利用生成成功，获得分子数量:",l.length)}}}}catch(r){console.warn("药物再利用生成失败，继续其他方法:",r)}S(5,6,80),b.value="第五步：正在合并和去重处理...";const c=[...i,...u,...l];if(console.log("多智能体生成总计:",{基于结构:i.length,基于序列:u.length,药物再利用:l.length,总计:c.length}),c.length===0)throw new Error("所有智能体都未能生成有效分子，请检查网络连接和API状态");const a=T(c,A.value);if(a.allDuplicates){h.warning("无法继续生成更多分子：所有新生成的分子都已存在");return}a.duplicateCount>0&&h.info(`去重完成：${a.duplicateCount}个重复分子已过滤，新增${a.uniqueMolecules.length}个独特分子`),S(6,6,100),b.value="多智能体协同生成完成！",A.value.push(...a.uniqueMolecules),H.value=!1,_e.value=!1,we.value=!1,ye.value=!1,U.value=!0,K();const _=`多智能体协同生成完成！成功添加 ${a.uniqueMolecules.length} 个独特分子
        (基于结构: ${i.length}, 基于序列: ${u.length}, 药物再利用: ${l.length})`;h.success(_)}catch(o){console.error("多智能体协同生成失败:",o),h.error(`多智能体生成失败: ${o.message}`)}finally{q.value.multiAgent=!1,de(s)}},ce=async()=>{q.value.sequence=!0;const s=ue("sequence");try{const o=G.value;if(!o)throw new Error("未找到靶点ID");b.value="第一步：正在分析靶点结构...",S(1,4,50);const i=await J.convertEnsembleToPDB(o);if(!i.success||i.pdbIds.length===0)throw new Error(`无法找到对应的PDB ID: ${i.error}`);const u=i.pdbIds[0];console.log("成功转换到PDB ID:",u),F.dispatch("setCurrentPdbId",u),i.isMock&&console.log("使用模拟PDB ID进行测试:",u),S(2,4,30),b.value="第二步：正在生成分子...";const l=await J.generateBySequence(u);if(!l.success)throw new Error(`分子生成失败: ${l.message||"未知错误"}`);S(3,4,50),b.value="正在处理生成结果...";const c=W(l.data,"基于结构生成"),a=T(c,A.value);if(a.allDuplicates){h.warning("无法继续生成更多分子：所有新生成的分子都已存在");return}a.duplicateCount>0&&h.info(`去重完成：${a.duplicateCount}个重复分子已过滤，新增${a.uniqueMolecules.length}个独特分子`),A.value.push(...a.uniqueMolecules),S(4,4,100),b.value="生成完成！",H.value=!1,U.value=!0,K();const _=i.isMock?`基于结构生成完成（使用模拟数据）！成功添加 ${a.uniqueMolecules.length} 个分子`:`基于结构生成完成！成功添加 ${a.uniqueMolecules.length} 个分子`;h.success(_)}catch(o){console.error("基于结构生成失败:",o),h.error(`生成失败: ${o.message}`)}finally{q.value.sequence=!1,de(s)}},se=async()=>{q.value.structure=!0;const s=ue("structure");try{const o=G.value;if(!o)throw new Error("未找到靶点ID");b.value="第一步：正在分析靶点结构...",S(1,5,50);const i=await J.convertEnsembleToPDB(o);if(!i.success||i.pdbIds.length===0)throw new Error(`无法找到对应的PDB ID: ${i.error}`);const u=i.pdbIds[0];console.log("成功转换到PDB ID:",u),i.isMock&&console.log("使用模拟PDB ID进行测试:",u),S(2,5,50),b.value="第二步：正在创建分子生成任务...";const l=await V.createTask(u,5);if(!l.success)throw new Error(`创建任务失败: ${l.message||"未知错误"}`);const c=l.job_id;console.log("成功创建任务，Job ID:",c),n.value=c,S(3,5,20),b.value="第三步：正在等待分子生成完成...";let a="pending",_=120,r=0;for(console.log("开始轮询任务状态，Job ID:",c);r<_;){await new Promise(P=>setTimeout(P,5e3));try{const P=await V.getJobStatus(c);if(console.log(`第${r+1}次状态检查:`,P),P.success)if(a=P.status,a==="completed"){console.log("任务已完成");break}else{if(a==="failed")throw new Error(`任务执行失败: ${P.error||"未知错误"}`);console.log(a==="running"||a==="pending"?`任务状态: ${a}，继续等待...`:`未知任务状态: ${a}，继续等待...`)}else console.warn("获取任务状态失败:",P)}catch(P){console.warn("检查任务状态时出错，继续等待:",P)}r++;const x=Math.min(r/_*100,100);S(3,5,x);const C=Math.ceil((_-r)*5/60);b.value=`第三步：正在等待分子生成完成...（预计还需${C}分钟）`}if(a!=="completed")throw new Error(`任务执行超时（等待了${Math.round(_*5/60)}分钟），请稍后重试或检查任务状态`);S(4,5,50),b.value="第四步：正在获取生成结果...";const g=await V.getJobResults(c);if(!g.success)throw new Error(`获取结果失败: ${g.message||"未知错误"}`);const v={success:!0,job_id:c,message:"分子生成成功",data:{pdb_id:u,timestamp:g.data.timestamp,status:g.data.status,summary:g.data.summary,pockets:g.data.pockets,molecules_by_pocket:g.data.molecules_by_pocket}};console.log("转换后的数据:",v);const M=W(v.data,"基于序列生成"),I=T(M,A.value);if(I.allDuplicates){h.warning("无法继续生成更多分子：所有新生成的分子都已存在");return}I.duplicateCount>0&&h.info(`去重完成：${I.duplicateCount}个重复分子已过滤，新增${I.uniqueMolecules.length}个独特分子`),A.value.push(...I.uniqueMolecules),S(5,5,100),b.value="生成完成！",H.value=!1,U.value=!0,K();const le=i.isMock?`基于序列生成完成（使用模拟数据）！成功添加 ${I.uniqueMolecules.length} 个分子`:`基于序列生成完成！成功添加 ${I.uniqueMolecules.length} 个分子`;h.success(le)}catch(o){console.error("基于序列生成失败:",o),h.error(`生成失败: ${o.message}`)}finally{q.value.structure=!1,de(s)}},te=async()=>{q.value.repurpose=!0;const s=ue("repurpose");try{S(1,5,20),b.value="第一步：正在获取疾病信息...";let o="";if(F.getters.currentDisease)o=F.getters.currentDisease,console.log("从DiseaseSearch跳转，使用疾病名称:",o);else{const g=G.value;if(!g)throw new Error("未找到靶点ID");console.log("从TargetSearch跳转，查询靶点相关疾病:",g);const v=await J.getDiseasesByTargetId(g,!1,.1,10);if(v.code===0&&v.data&&v.data.results&&v.data.results.length>0)o=v.data.results[0].disease_name,console.log("查询到相关疾病:",o);else throw new Error("未找到相关疾病信息")}if(!o)throw new Error("无法获取疾病名称");S(2,5,40),b.value="第二步：正在调用药物再利用API...";const i={disease_name:o,custom_file_name:"demo",top_k:5};console.log("调用药物再利用API，参数:",i);const u=await fe.predict(i);if(u.code!==0)throw new Error(u.msg||"药物再利用API调用失败");S(3,5,60),b.value="第三步：正在获取药物SMILES数据...";const l=u.data.predictions||[];if(l.length===0)throw new Error("未找到可再利用的药物");const c=l.map(g=>g.drug_name).filter(Boolean);console.log("需要获取SMILES的药物名称:",c);const a=await fe.getBatchSMILES(c);console.log("获取到的SMILES数据:",a),S(4,5,80),b.value="第四步：正在计算分子性质...";const _=l.map((g,v)=>{const M=a[g.drug_name]||"Unknown",I=M&&M!=="Unknown";return{id:`repurpose-${Date.now()}-${v}`,name:g.drug_name||`Drug ${v+1}`,smiles:M,moleculeImage:Q(),generationMethod:"药物再利用",score:Math.abs(g.score||0),selected:!1,confidence:I?.9:.8,compositeScore:Math.abs(g.score||0),qualityLabel:I?"excellent":"good",molecularWeight:I?X(M):300,logp:I?ie(M):2,pocket:"Unknown",pocketIndex:1,drugbankId:g.drugbank_id||"",originalScore:g.score||0,hasSMILES:I}});S(5,5,90),b.value="第五步：正在去重处理...";const r=T(_,A.value);if(r.allDuplicates){h.warning("无法继续生成更多药物：所有新生成的药物分子都已存在");return}r.duplicateCount>0&&h.info(`去重完成：${r.duplicateCount}个重复分子已过滤，新增${r.uniqueMolecules.length}个独特分子`),S(6,6,100),b.value="生成完成！",A.value.push(...r.uniqueMolecules),H.value=!1,U.value=!0,K(),h.success(`药物再利用生成完成！成功添加 ${r.uniqueMolecules.length} 个可再利用的药物`)}catch(o){console.error("药物再利用生成失败:",o),h.error(`生成失败: ${o.message}`)}finally{q.value.repurpose=!1,de(s)}},W=(s,o)=>{console.log("开始处理API返回的分子数据:",s),console.log("数据类型:",typeof s),console.log("数据结构:",Object.keys(s||{}));const i=[];try{if(!s)return console.error("API返回的数据为空"),[];if(!s.molecules_by_pocket){console.error("API返回的数据中没有找到molecules_by_pocket字段"),console.log("可用的字段:",Object.keys(s));const u=["molecules","molecules_by_pocket","generated_molecules","results"];let l=null;for(const c of u)if(s[c]&&Array.isArray(s[c])){l=c;break}else if(s[c]&&typeof s[c]=="object"){l=c;break}return l&&(console.log(`找到替代字段: ${l}`,s[l]),Array.isArray(s[l]))?s[l].map((c,a)=>({id:`generated-${Date.now()}-${a}`,name:`Generated Molecule ${a+1}`,smiles:c.smiles||c.SMILES||"Unknown",confidence:c.generation_confidence||c.confidence||.8,compositeScore:c.composite_score||c.score||.7,qualityLabel:c.quality_label||c.quality||"good",molecularWeight:c.molecular_weight||c.weight||300,logp:c.logp||c.LogP||2,pocket:"Unknown",pocketIndex:1,generationMethod:o,selected:!1,image:Q()})):[]}Object.keys(s.molecules_by_pocket).forEach((u,l)=>{const c=s.molecules_by_pocket[u];if(console.log(`处理口袋 ${u}:`,c),!Array.isArray(c)){console.warn(`口袋 ${u} 的分子数据不是数组:`,c);return}c.forEach((a,_)=>{console.log(`处理分子 ${_+1}:`,a);const r={id:`generated-${Date.now()}-${l}-${_}`,name:`${u}_molecule_${_+1}`,smiles:a.smiles||a.SMILES||"Unknown",moleculeImage:Q(),generationMethod:o,score:a.composite_score||a.generation_confidence||.8,selected:!1,confidence:a.generation_confidence||a.confidence||.8,compositeScore:a.composite_score||a.score||.7,qualityLabel:a.quality_label||a.quality||"good",molecularWeight:a.molecular_weight||a.weight||300,logp:a.logp||a.LogP||2,pocket:u,pocketIndex:l+1};i.push(r),console.log(`处理完成分子 ${_+1}:`,r)})}),i.length===0&&console.warn("API返回的数据中没有找到分子信息"),console.log(`成功处理 ${i.length} 个分子数据`)}catch(u){return console.error("处理分子数据时出错:",u),[]}return i},Q=()=>"https://via.placeholder.com/150x150/56ab2f/ffffff?text=Molecule",X=s=>{if(!s||s==="Unknown")return 300;try{const o={C:12.01,N:14.01,O:16,S:32.07,P:30.97,F:19,Cl:35.45,Br:79.9,I:126.9,H:1.01};let i=0,u="",l=1;for(let c=0;c<s.length;c++){const a=s[c];/[A-Z]/.test(a)?(u&&(i+=o[u]*l),u=a,l=1):/[a-z]/.test(a)?u+=a:/\d/.test(a)&&(l=parseInt(a))}return u&&(i+=o[u]*l),Math.round(i*10)/10}catch(o){return console.error("计算分子量失败:",o),300}},ie=s=>{if(!s||s==="Unknown")return 2;try{let o=0;const i=(s.match(/C/g)||[]).length;o+=i*.5;const u=(s.match(/O/g)||[]).length;o-=u*.3;const l=(s.match(/N/g)||[]).length;o-=l*.2;const c=(s.match(/[FClBrI]/g)||[]).length;o+=c*.5;const a=(s.match(/[1-9]/g)||[]).length;return o+=a*.1,Math.round(o*100)/100}catch(o){return console.error("计算LogP失败:",o),2}},me=()=>{const s=A.value.filter(o=>o.selected);if(s.length===0){h.warning("请先选择要筛选的药物");return}F.dispatch("setGeneratedDrugs",s),console.log("已保存到store的选中药物:",s),t.push("/drug-filtering")},he=()=>{U.value=!1,A.value=[],H.value=!0,_e.value=!0,we.value=!0,ye.value=!0,h.info("已返回生成药物列表")},d=E("existing"),oe=s=>{d.value=s},U=E(!1),A=E([]),H=E(!0),_e=E(!0),we=E(!0),ye=E(!0),Z=E(!1),De=ge(()=>A.value.filter(s=>s.selected)),Y=E(0),b=E(""),ke=ge(()=>q.value.multiAgent||q.value.sequence||q.value.structure||q.value.repurpose),ue=s=>{j.value={currentStep:0,totalSteps:0,stepProgress:0,isCompleted:!1};const i={multiAgent:{totalSteps:3,description:"多智能体协同分析中..."},sequence:{totalSteps:4,description:"开始基于序列生成..."},structure:{totalSteps:5,description:"分子结构优化中..."},repurpose:{totalSteps:5,description:"药物再利用分析中..."}}[s]||{totalSteps:3,description:"正在处理..."};return j.value.totalSteps=i.totalSteps,b.value=i.description,ne(0),setInterval(()=>{if(!j.value.isCompleted&&Y.value<80){const l=Math.random()*5;ne(Y.value+l)}},500)},de=s=>{j.value.isCompleted=!0,Y.value<100&&ne(100),setTimeout(()=>{clearInterval(s),Y.value=0,b.value="",j.value={currentStep:0,totalSteps:0,stepProgress:0,isCompleted:!1}},1500)},Ae=()=>{Z.value=!Z.value,A.value.forEach(s=>{s.selected=Z.value})},Ce=s=>{s.selected=!s.selected;const o=A.value.every(i=>i.selected);Z.value=o},K=()=>{if(A.value.length>0){const s=A.value.every(o=>o.selected);Z.value=s}else Z.value=!1},qe=s=>{ke.value||(s==="sequence"?ce():s==="structure"?se():s==="repurpose"&&te())},Pe=s=>({多智能体协同生成:"method-multi-agent",基于结构生成:"method-sequence",基于序列生成:"method-structure",药物再利用:"method-repurpose"})[s]||"method-default",Le=s=>({excellent:"quality-excellent",good:"quality-good",medium:"quality-medium",poor:"quality-poor"})[s]||"quality-default";$e(()=>{G.value?ee():t.push("/target-search")});const Be=async()=>{if(!n.value){h.warning("没有可检查的任务ID");return}q.value.statusCheck=!0;try{console.log("检查任务状态:",n.value);const s=await V.getJobStatus(n.value);if(console.log("任务状态结果:",s),s.success){const o=s.status;let i="";if(o==="completed"){i="任务已完成！正在获取结果...",h.success(i);const u=await V.getJobResults(n.value);if(u.success){const l={success:!0,job_id:n.value,message:"分子生成成功",data:{pdb_id:s.pdb_id,timestamp:u.data.timestamp,status:u.data.status,summary:u.data.summary,pockets:u.data.pockets,molecules_by_pocket:u.data.molecules_by_pocket}},c=W(l.data,"基于序列生成"),a=new Set(A.value.map(r=>r.smiles).filter(r=>r&&r!=="Unknown")),_=c.filter(r=>!r.smiles||r.smiles==="Unknown"?!0:!a.has(r.smiles));if(_.length===0){h.warning("无法继续生成更多分子：所有新生成的分子都已存在");return}if(_.length<c.length){const r=c.length-_.length;h.info(`去重完成：${r}个重复分子已过滤，新增${_.length}个独特分子`)}A.value.push(..._),H.value=!1,U.value=!0,K(),h.success(`成功获取结果！新增了 ${_.length} 个分子`)}else h.error(`获取结果失败: ${u.message||"未知错误"}`)}else o==="failed"?(i=`任务执行失败: ${s.error||"未知错误"}`,h.error(i)):o==="running"?(i="任务正在运行中，请稍后再次检查",h.info(i)):o==="pending"?(i="任务等待中，请稍后再次检查",h.info(i)):(i=`任务状态: ${o}`,h.info(i))}else h.error(`获取任务状态失败: ${s.message||"未知错误"}`)}catch(s){console.error("检查任务状态失败:",s),h.error(`检查失败: ${s.message}`)}finally{q.value.statusCheck=!1}},j=E({currentStep:0,totalSteps:0,stepProgress:0,isCompleted:!1}),ne=s=>{const o=Math.max(0,Math.min(100,s));Y.value=o,o>=100&&(j.value.isCompleted=!0)},S=(s,o,i)=>{j.value.currentStep=s,j.value.totalSteps=o,j.value.stepProgress=i;const u=(s-1)*(80/o),l=i/100*(20/o),c=u+l;ne(c)};return{currentTarget:G,drugsList:$,targetInfo:O,loading:q,lastJobId:n,getPhaseText:pe,getPhaseType:z,getStatusType:ve,generateByMultiAgent:re,generateBySequence:ce,generateByStructure:se,generateByRepurpose:te,startFiltering:me,backToGeneration:he,activeSection:d,switchSection:oe,hasGeneratedDrugs:U,generatedDrugs:A,storeGeneratedDrugs:w,showMultiAgentBtn:H,showSequenceBtn:_e,showStructureBtn:we,showRepurposeBtn:ye,selectAll:Z,selectedDrugs:De,handleSelectAll:Ae,handleDrugSelect:Ce,updateSelectAllState:K,loadingProgress:Y,currentLoadingText:b,isAnyLoading:ke,handleContinueGeneration:qe,getMethodClass:Pe,getQualityClass:Le,processGeneratedMolecules:W,checkTaskStatus:Be,progressState:j,setProgressSafely:ne,setStepProgress:S,deduplicateMolecules:T}}},He={class:"target-drugs"},Ze={class:"header"},Xe={key:0,class:"target-details"},Ye={class:"content"},Ke={class:"section-tabs"},es={class:"content-display"},ss={class:"section-content"},ts={key:0,class:"loading-container"},os={key:1,class:"no-drugs"},ns={key:2,class:"drugs-list"},ls={class:"drug-info"},as={class:"drug-description"},rs={class:"drug-tags"},cs={class:"drug-actions"},is=["href"],us={class:"section-content"},ds={key:0,class:"generation-buttons"},gs={key:0,class:"global-loading"},fs={class:"loading-overlay"},ps={class:"loading-content"},vs={class:"loading-icon"},ms={class:"loading-progress"},hs={class:"progress-bar"},_s={class:"progress-text"},ws={class:"generation-cards"},ys={class:"card-icon"},ks={class:"card-overlay"},bs={key:1},Is={class:"card-icon"},Ss={class:"card-overlay"},Ms={key:1},Ds={class:"card-icon"},As={class:"card-overlay"},Cs={key:1},qs={class:"card-icon"},Ps={class:"card-overlay"},Ls={key:1},Bs={key:1,class:"filter-section"},Es={class:"filter-buttons"},xs={key:2,class:"generated-drugs-list"},Rs={class:"select-all-section"},Ts={key:0,class:"checkbox-inner"},Us={class:"checkbox-label"},Fs={class:"drugs-grid"},Gs={class:"drug-molecule"},js={class:"drug-info"},Ns={class:"molecule-name"},zs={class:"smiles"},Js={class:"molecule-details"},Ws={key:0,class:"detail-item"},Vs={class:"value"},$s={key:1,class:"detail-item"},Os={class:"value"},Qs={key:2,class:"detail-item"},Hs={key:3,class:"detail-item"},Zs={class:"value"},Xs={key:4,class:"detail-item"},Ys={class:"value"},Ks={class:"drug-meta"},et={class:"drug-selection"},st=["onClick"],tt={key:0,class:"checkbox-inner"};function ot(F,t,q,n,G,$){const O=B("ArrowLeft"),w=B("el-icon"),T=B("el-button"),ee=B("List"),pe=B("MagicStick"),z=B("Loading"),ve=B("el-empty"),re=B("el-tag"),ce=B("Connection"),se=B("Grid"),te=B("Refresh"),W=B("Plus"),Q=B("ArrowDown"),X=B("el-dropdown-item"),ie=B("el-dropdown-menu"),me=B("el-dropdown"),he=B("Filter");return p(),y("div",He,[e("div",Ze,[f(T,{onClick:t[0]||(t[0]=d=>F.$router.push("/")),type:"text",class:"back-btn"},{default:m(()=>[f(w,null,{default:m(()=>[f(O)]),_:1}),t[8]||(t[8]=L(" 返回首页 ",-1))]),_:1,__:[8]}),t[9]||(t[9]=e("h1",null,"针对靶点生成药物",-1)),n.targetInfo?(p(),y("p",Xe," 靶点ID："+k(n.targetInfo.id)+" | 符号："+k(n.targetInfo.symbol)+" | 名称："+k(n.targetInfo.name),1)):D("",!0)]),e("div",Ye,[e("div",Ke,[e("button",{class:N(["tab-button",{active:n.activeSection==="existing"}]),onClick:t[1]||(t[1]=d=>n.switchSection("existing"))},[f(w,null,{default:m(()=>[f(ee)]),_:1}),L(" 已有药物列表 "+k(n.drugsList.length>0?"("+n.drugsList.length+")":""),1)],2),e("button",{class:N(["tab-button",{active:n.activeSection==="generation"}]),onClick:t[2]||(t[2]=d=>n.switchSection("generation"))},[f(w,null,{default:m(()=>[f(pe)]),_:1}),L(" 生成药物列表 "+k(n.generatedDrugs.length>0?"("+n.generatedDrugs.length+")":""),1)],2)]),e("div",es,[be(e("div",ss,[n.loading.drugs?(p(),y("div",ts,[f(w,{class:"is-loading"},{default:m(()=>[f(z)]),_:1}),t[10]||(t[10]=e("span",null,"正在加载药物数据...",-1))])):n.drugsList.length===0?(p(),y("div",os,[f(ve,{description:"暂无相关药物信息"},{description:m(()=>t[11]||(t[11]=[e("div",{class:"no-drugs-content"},[e("p",null,"该靶点目前暂无相关药物信息"),e("p",{class:"no-drugs-suggestion"},"您可以尝试使用生成药物功能来探索可能的药物候选物")],-1)])),_:1})])):(p(),y("div",ns,[(p(!0),y(Se,null,Me(n.drugsList,(d,oe)=>{var U,A;return p(),y("div",{key:d.drugId||`drug-${oe}`,class:"drug-item"},[e("div",ls,[e("h3",null,k(d.prefName||d.approvedName||"未知药物"),1),e("p",as,[t[12]||(t[12]=e("strong",null,"药物ID:",-1)),L(" "+k(d.drugId),1),t[13]||(t[13]=e("br",null,null,-1)),t[14]||(t[14]=e("strong",null,"批准名称:",-1)),L(" "+k(d.approvedName||"未批准"),1),t[15]||(t[15]=e("br",null,null,-1)),t[16]||(t[16]=e("strong",null,"作用机制:",-1)),L(" "+k(d.mechanismOfAction||"未知"),1),t[17]||(t[17]=e("br",null,null,-1)),t[18]||(t[18]=e("strong",null,"研发阶段:",-1)),L(" "+k(n.getPhaseText(d.phase)),1),t[19]||(t[19]=e("br",null,null,-1)),t[20]||(t[20]=e("strong",null,"相关疾病:",-1)),L(" "+k(((U=d.disease)==null?void 0:U.name)||"未知"),1)]),e("div",rs,[d.phase!==void 0?(p(),R(re,{key:0,type:n.getPhaseType(d.phase),size:"small"},{default:m(()=>[L(k(n.getPhaseText(d.phase)),1)]),_:2},1032,["type"])):D("",!0),(A=d.disease)!=null&&A.name?(p(),R(re,{key:1,type:"info",size:"small"},{default:m(()=>[L(k(d.disease.name),1)]),_:2},1024)):D("",!0)])]),e("div",cs,[e("a",{href:"https://www.ebi.ac.uk/chembl/explore/compound/"+d.drugId,target:"_blank"},[f(T,{size:"small",type:"success"},{default:m(()=>t[21]||(t[21]=[L("查看详情",-1)])),_:1,__:[21]})],8,is)])])}),128))]))],512),[[Ie,n.activeSection==="existing"]]),be(e("div",us,[n.hasGeneratedDrugs?D("",!0):(p(),y("div",ds,[n.isAnyLoading?(p(),y("div",gs,[e("div",fs,[e("div",ps,[e("div",vs,[f(w,{class:"is-loading"},{default:m(()=>[f(z)]),_:1})]),t[22]||(t[22]=e("h3",null,"正在生成药物...",-1)),e("p",null,k(n.currentLoadingText),1),e("div",ms,[e("div",hs,[e("div",{class:"progress-fill",style:We({width:n.loadingProgress+"%"})},null,4)]),e("span",_s,k(Math.round(n.loadingProgress))+"%",1)])])])])):D("",!0),e("div",ws,[n.showMultiAgentBtn?(p(),y("div",{key:0,class:N(["gen-card",{loading:n.loading.multiAgent}]),onClick:t[3]||(t[3]=(...d)=>n.generateByMultiAgent&&n.generateByMultiAgent(...d))},[e("div",ys,[f(w,{class:"icon-main"},{default:m(()=>[f(ce)]),_:1}),t[23]||(t[23]=e("div",{class:"icon-glow"},null,-1))]),t[24]||(t[24]=e("div",{class:"card-content"},[e("h4",null,"多智能体协同生成"),e("p",null,"多智能体协同工作，一次性获得多样化药物候选物"),e("div",{class:"card-features"},[e("span",{class:"feature-tag"},"协同生成"),e("span",{class:"feature-tag"},"高效整合")])],-1)),e("div",ks,[n.loading.multiAgent?(p(),R(w,{key:0,class:"is-loading"},{default:m(()=>[f(z)]),_:1})):(p(),y("span",bs,"开始生成"))])],2)):D("",!0),n.showSequenceBtn?(p(),y("div",{key:1,class:N(["gen-card",{loading:n.loading.sequence}]),onClick:t[4]||(t[4]=(...d)=>n.generateBySequence&&n.generateBySequence(...d))},[e("div",Is,[f(w,{class:"icon-main"},{default:m(()=>[f(ee)]),_:1}),t[25]||(t[25]=e("div",{class:"icon-glow"},null,-1))]),t[26]||(t[26]=e("div",{class:"card-content"},[e("h4",null,"基于结构生成"),e("p",null,"基于靶点结构信息，优化药物设计"),e("div",{class:"card-features"},[e("span",{class:"feature-tag"},"结构优化"),e("span",{class:"feature-tag"},"分子对接")])],-1)),e("div",Ss,[n.loading.sequence?(p(),R(w,{key:0,class:"is-loading"},{default:m(()=>[f(z)]),_:1})):(p(),y("span",Ms,"开始生成"))])],2)):D("",!0),n.showStructureBtn?(p(),y("div",{key:2,class:N(["gen-card",{loading:n.loading.structure}]),onClick:t[5]||(t[5]=(...d)=>n.generateByStructure&&n.generateByStructure(...d))},[e("div",Ds,[f(w,{class:"icon-main"},{default:m(()=>[f(se)]),_:1}),t[27]||(t[27]=e("div",{class:"icon-glow"},null,-1))]),t[28]||(t[28]=e("div",{class:"card-content"},[e("h4",null,"基于序列生成"),e("p",null,"通过分析蛋白质序列信息，设计针对性药物"),e("div",{class:"card-features"},[e("span",{class:"feature-tag"},"序列分析"),e("span",{class:"feature-tag"},"精准设计")])],-1)),e("div",As,[n.loading.structure?(p(),R(w,{key:0,class:"is-loading"},{default:m(()=>[f(z)]),_:1})):(p(),y("span",Cs,"开始生成"))])],2)):D("",!0),n.showRepurposeBtn?(p(),y("div",{key:3,class:N(["gen-card",{loading:n.loading.repurpose}]),onClick:t[6]||(t[6]=(...d)=>n.generateByRepurpose&&n.generateByRepurpose(...d))},[e("div",qs,[f(w,{class:"icon-main"},{default:m(()=>[f(te)]),_:1}),t[29]||(t[29]=e("div",{class:"icon-glow"},null,-1))]),t[30]||(t[30]=e("div",{class:"card-content"},[e("h4",null,"药物再利用"),e("p",null,"通过知识图谱和图神经网络，智能筛选现有药物，发现新的治疗用途"),e("div",{class:"card-features"},[e("span",{class:"feature-tag"},"智能筛选"),e("span",{class:"feature-tag"},"知识导向")])],-1)),e("div",Ps,[n.loading.repurpose?(p(),R(w,{key:0,class:"is-loading"},{default:m(()=>[f(z)]),_:1})):(p(),y("span",Ls,"开始生成"))])],2)):D("",!0)])])),n.hasGeneratedDrugs?(p(),y("div",Bs,[e("div",Es,[f(T,{type:"info",size:"default",onClick:n.backToGeneration,class:"action-btn back-btn"},{default:m(()=>[f(w,null,{default:m(()=>[f(O)]),_:1}),t[31]||(t[31]=L(" 返回上一步 ",-1))]),_:1,__:[31]},8,["onClick"]),n.showMultiAgentBtn?D("",!0):(p(),R(me,{key:0,onCommand:n.handleContinueGeneration,class:"continue-dropdown",disabled:n.isAnyLoading},{dropdown:m(()=>[f(ie,null,{default:m(()=>[n.showSequenceBtn?(p(),R(X,{key:0,command:"sequence"},{default:m(()=>[f(w,null,{default:m(()=>[f(ee)]),_:1}),t[32]||(t[32]=L(" 基于结构生成 ",-1))]),_:1,__:[32]})):D("",!0),n.showStructureBtn?(p(),R(X,{key:1,command:"structure"},{default:m(()=>[f(w,null,{default:m(()=>[f(se)]),_:1}),t[33]||(t[33]=L(" 基于序列生成 ",-1))]),_:1,__:[33]})):D("",!0),n.showRepurposeBtn?(p(),R(X,{key:2,command:"repurpose"},{default:m(()=>[f(w,null,{default:m(()=>[f(te)]),_:1}),t[34]||(t[34]=L(" 药物再利用 ",-1))]),_:1,__:[34]})):D("",!0)]),_:1})]),default:m(()=>[f(T,{type:"warning",size:"default",class:"action-btn continue-btn",disabled:n.isAnyLoading},{default:m(()=>[n.isAnyLoading?(p(),R(w,{key:0,class:"is-loading"},{default:m(()=>[f(z)]),_:1})):(p(),R(w,{key:1},{default:m(()=>[f(W)]),_:1})),L(" "+k(n.isAnyLoading?"生成中...":"继续生成")+" ",1),n.isAnyLoading?D("",!0):(p(),R(w,{key:2,class:"el-icon--right"},{default:m(()=>[f(Q)]),_:1}))]),_:1},8,["disabled"])]),_:1},8,["onCommand","disabled"])),f(T,{type:"primary",size:"default",onClick:n.startFiltering,loading:n.loading.filtering,class:"action-btn filter-btn"},{default:m(()=>[f(w,null,{default:m(()=>[f(he)]),_:1}),t[35]||(t[35]=L(" 开始筛选 ",-1))]),_:1,__:[35]},8,["onClick","loading"])])])):D("",!0),n.generatedDrugs.length>0?(p(),y("div",xs,[e("div",Rs,[e("div",{class:"custom-checkbox",onClick:t[7]||(t[7]=(...d)=>n.handleSelectAll&&n.handleSelectAll(...d))},[e("div",{class:N(["checkbox-input",{checked:n.selectAll}])},[n.selectAll?(p(),y("div",Ts)):D("",!0)],2),e("span",Us," 全选 ("+k(n.selectedDrugs.length)+"/"+k(n.generatedDrugs.length)+") ",1)])]),e("div",Fs,[(p(!0),y(Se,null,Me(n.generatedDrugs,(d,oe)=>(p(),y("div",{key:`generated-${oe}`,class:"generated-drug-item"},[e("div",Gs,[e("div",js,[e("h4",Ns,k(d.name),1),e("p",zs,k(d.smiles),1),e("div",Js,[d.confidence?(p(),y("div",Ws,[t[36]||(t[36]=e("span",{class:"label"},"置信度:",-1)),e("span",Vs,k((d.confidence*100).toFixed(1))+"%",1)])):D("",!0),d.compositeScore?(p(),y("div",$s,[t[37]||(t[37]=e("span",{class:"label"},"综合评分:",-1)),e("span",Os,k(d.compositeScore.toFixed(3)),1)])):D("",!0),d.qualityLabel?(p(),y("div",Qs,[t[38]||(t[38]=e("span",{class:"label"},"质量:",-1)),e("span",{class:N(["value quality-badge",n.getQualityClass(d.qualityLabel)])},k(d.qualityLabel),3)])):D("",!0),d.molecularWeight?(p(),y("div",Hs,[t[39]||(t[39]=e("span",{class:"label"},"分子量:",-1)),e("span",Zs,k(d.molecularWeight.toFixed(1)),1)])):D("",!0),d.logp?(p(),y("div",Xs,[t[40]||(t[40]=e("span",{class:"label"},"LogP:",-1)),e("span",Ys,k(d.logp.toFixed(2)),1)])):D("",!0)]),e("div",Ks,[e("span",{class:N(["generation-method",n.getMethodClass(d.generationMethod)])},k(d.generationMethod),3)])])]),e("div",et,[e("div",{class:"custom-checkbox",onClick:U=>n.handleDrugSelect(d)},[e("div",{class:N(["checkbox-input",{checked:d.selected}])},[d.selected?(p(),y("div",tt)):D("",!0)],2),t[41]||(t[41]=e("span",{class:"checkbox-label"},"选择",-1))],8,st)])]))),128))])])):D("",!0)],512),[[Ie,n.activeSection==="generation"]])])])])}const rt=Ee(Qe,[["render",ot],["__scopeId","data-v-90f6da90"]]);export{rt as default};
